{"version":3,"sources":["Components/MeetingTitle.module.css","Components/Aux.js","Components/Heading.js","Components/Spinner.js","Components/IconLink.js","Components/MultipleDatePicker/components/Datepicker/utils.js","Components/MultipleDatePicker/components/Datepicker/WeekHeader.js","Components/MultipleDatePicker/components/Datepicker/dateUtils.js","Components/MultipleDatePicker/components/Datepicker/Week.js","Components/MultipleDatePicker/components/Datepicker/Month.js","Components/MultipleDatePicker/components/Datepicker/CalendarToolbar.js","Components/MultipleDatePicker/components/Datepicker/CalendarButtons.js","Components/MultipleDatePicker/components/Datepicker/DateDisplay.js","Components/MultipleDatePicker/components/Datepicker/Calendar.js","Components/MultipleDatePicker/components/Datepicker/index.js","Components/MultipleDatePicker/index.js","Redux/actions/actionTypes.js","Redux/actions/actionCreators.js","Utility/utilities.js","Redux/reducers/loadedSchedule.js","Redux/reducers/meetingsReducer.js","Redux/reducers/reducerUtilities.js","Redux/reducers/fetchReducer.js","Redux/reducers/partsObjectByIds.js","Redux/reducers/meetingPartsById.js","Redux/reducers/schedule.js","Redux/reducers/partsAllIds.js","Redux/reducers/meetingsById.js","Redux/reducers/addMeeting.js","Redux/reducers/privsReducer.js","Redux/reducers/apiRoot.js","Redux/reducers/addPartReducer.js","Redux/reducers/meetingNote.js","Redux/reducers/shouldUpdateReducer.js","Redux/reducers/schedulesReducer.js","Redux/reducers/alertReducer.js","Redux/reducers/meetingIdMapReducer.js","Redux/reducers/rootReducer.js","Redux/actions/async/asyncActions.js","Redux/actions/async/asyncActions2.js","Components/DatePickerInputGroup.js","Components/AddMeeting.js","Components/MeetingTitle.js","Components/AddPart.js","Components/ConfigureMeeting.js","Components/PartTitles.js","Components/Meeting.js","Components/ClickableIconWrappedInDiv.js","Components/Part.js","Components/MeetingNote.js","Components/LoadSchedule.js","Components/ConfigureSchedule.js","Components/CreateModal.js","Components/SaveScheduleModal.js","Components/ScheduleIsPublishedCB.js","Components/ScheduleRow.js","Components/AlertMessage.js","Components/Root.js","Redux/initialState.js","Redux/store.js","index.js","Components/ScheduleRow.module.css"],"names":["module","exports","Aux","props","children","Heading","scheduleMonth","scheduleYear","monthYear","scheduleId","className","Spinner","icon","faSpinner","spin","size","IconLink","display","linkProps","style","textDecoration","title","DateUtilities","pad","value","length","clone","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","toString","toDayOfMonthString","toMonthAndYearString","moveToDayOfWeek","dayOfWeek","getDay","setDate","isSameDay","first","second","dateIn","datesArray","filter","day","isBefore","this","getTime","isAfter","StyledDiv","styled","div","StyledSpan","span","WeekHeader","dayAbbreviation","monthList","monthLongList","dateTimeFormat","locale","options","warning","format","month","year","weekday","addDays","d","days","newDate","cloneDate","getFirstDayOfMonth","monthDiff","d1","d2","m","defaultUtils","getYear","setYear","setFullYear","addMonths","months","setMonth","addYears","years","getWeekArray","firstDayOfWeek","dayArray","daysInMonth","resultDate","getDaysInMonth","weekArray","week","i","push","addWeek","emptyDays","forEach","indexOf","StyledWeek","DayButton","button","Blank","DayBackdrop","selected","Day","today","disabled","Week","onSelect","isDisabled","minDate","maxDate","isSelected","selectedDates","dateInNumberic","dateToday","dayInNumeric","map","isToday","key","onClick","e","preventDefault","Component","MonthWrapper","Weeks","renderWeeks","utils","displayDate","s","Icon","Root","TitleDiv","TitleText","CalendarToolbar","state","transitionDirection","handleTouchTapPrevMonth","onMonthChange","handleTouchTapNextMonth","nextProps","direction","setState","dateTimeFormatted","prevMonth","String","fromCharCode","nextMonth","defaultProps","Button","CalendarActionButton","onCancel","onOk","DateTime","DateDisplay","selectedYear","getFormatedDate","dateTime","monthDaySelected","hideCalendarDate","CalendarContainer","StyledCalendar","Calendar","undefined","displayMonthDay","selectedDate","open","transitionEnter","handleMonthChange","calendarRefs","initialDate","openToYearSelection","getMinDate","getMaxDate","toolbarInteractions","getToolbarInteractions","visible","Month","view","toDateString","ref","calendar","CalendarButtons","disableYearSelection","StyledDatePicker","Backdrop","Dialog","DialogInnerWrap","DialogContent","DatePicker","onSubmit","toggleOpen","handleCancel","dismiss","handleRequestClose","handleOk","onDismiss","def","extraInputProps","React","cloneElement","Children","only","join","readOnly","type","faPlusCircle","scheduleStartDate","actionTypes","ADD_AND_SORT_MEETING","ADD_ASSIGNED_ID_TO_PARTS","ADD_CO_PART","ADD_MEETING_ID_MAP","ADD_MEETING_NOTE_FROM_CAKE","ADD_MEETING","ADD_MESSAGE","ADD_PART_IDS","ADD_PART_PICKER","ADD_PARTS_OBJECT","ADD_PARTS","ADD_SINGLE_PARTS_OBJECT","ADD_TO_MEETING_PARTS_BY_ID","BULK_UPDATE_MEETING_PARTS","CANCEL_MEETING_NOTE","CLEAR_MEETINGS","CO_VISIT","CONFIGURE_MEETING_DATE","DELETE_CO_PART","DELETE_MEETING_NOTE_ID","DELETE_MEETING_OBJECT","DELETE_MEETING","DELETE_PART","FETCH_FAIL","FETCH_START","FETCH_SUCCESS","HIDE_ALERT","HIDE_PART_PICKER","INSERT_CO_PART","INSERT_PART","LOAD_MEETINGS_BY_ID","LOAD_PRIVS","LOAD_SCHEDULE","LOAD_SCHEDULES","MODAL_OK","POPULATE_MEETING_PARTS_BY_ID","POPULATE_MEETING_PARTS_FROM_CAKE","REMOVE_MEETING_ID_MAP","REMOVE_MEETING_PARTS","REMOVE_MESSAGE","RESET_PART_VALUES","SET_API_URL","SET_MEETING_DATE_BY_MEETING_ID","SET_MEETING_VALUE","SET_SCHEDULE_DATA","SET_SCHEDULE_END_DATE","SET_SCHEDULE_ID","SET_SCHEDULE_START_DATE","SHOW_ALERT","SORTED_MEETINGS","TOGGLE_MEETING_NOTE","TOGGLE_SAVE_SCHEDULE_MODAL","TOGGLE_SCHEDULE_MODAL","UPDATE_ALL_START_TIMES","UPDATE_ALLOW","UPDATE_ASSIGNED_ID","UPDATE_FORM","UPDATE_FORMDATA","UPDATE_MEETING_NOTE_ID","UPDATE_MEETING_NOTE","UPDATE_MEETING_PART","UPDATE_START_TIME","UPDATE_STOP","UPDATE_TIMES","hideAddPart","deleteCoParts","meetingId","partId","insertCoPart","indexNumber","addCoPart","partObject","part","clickCoVisit","checkBoxValue","coVisit","clearMeetings","addMeeting","meetingDate","meetingUUID","chairmanId","auxCounselorId","startTime","id","updateForm","name","optionText","fieldText","addSinglePartsObject","filteredParts","partsByIdArray","addToMeetingPartsById","newObject","partsObject","sortedMeetings","sortedIDArray","sortedArray","deleteMeetingObject","deleteMeeting","insertPart","partsObjectByIds","meeting_id","part_id","showPicker","updateMeetingPart","action","text","fieldValue","fieldName","setScheduleEndDate","endDate","setMeetingDate","fetchStart","isFetching","fetchSuccess","fetchFail","statusText","updateMeetingNoteId","meetingNoteId","toggleMeetingNote","add","setScheduleData","data","showAlert","hideAlert","addMessage","message","color","setScheduleId","toggleScheduleSaveModal","setMeetingValue","valueName","addMeetingIdMap","meetingIdLocal","meetingIdCake","removeMeetingParts","handleErrors","response","ok","json","then","err","Promise","reject","isEmptyObject","obj","Object","keys","constructor","stringDateToDate","strDate","moment","toDate","formatDate","outputFormat","getUUID","uuid","fetchFromCake","dispatch","url","method","init","mode","credentials","headers","Accept","body","JSON","stringify","fetch","flattenObject","ob","toReturn","hasOwnProperty","flatObject","x","loadedSchedule","meetings","parts","slice","newParts","splice","partIdArray","concat","parseInt","partIdRemoved","local_id","person_id","auxiliary_counselor_id","reduce","accum","current","oldParts","meetingObject","getMeeting","updateObject","oldObject","newValues","calcPartStartTime","partIds","partEntities","totalMinutes","partStartTime","newPartStartTime","haveSeen","partIdMap","index","partMinutes","minutes","counselMinutes","counsel_mins","fetchReducer","fetchError","meetingPartsById","newPart","assign","copiedState","parse","start_time","deepCopy","upObj","assigned_id","assignedId","partKey","meetingIds","newMeetingPartsById","y","songNumber","getMeetingPart","schedule","isModalVisible","showScheduleModal","isPublished","start_date","startDate","end_date","partsAllIds","meetingsById","meetingsArray","privs","apiRoot","baseUrl","apiStub","addParts","showPickerBool","insertInMeetingId","partname","compare","a","b","sort_order","meetingNote","active","meeting_note_id","heading","note","shouldUpdate","schedules","getSchedulesList","month_year","alertMessage","show","meetingIdMap","copyOfState","getApiRoot","fromApiRoot","getCurrentPartList","notInCurrentParts","currentParts","includes","sort","fromAddPartReducer","getMeetingIdSortedByDate","getCoVisitParts","co_visit","fromPartsObjectByIds","getNotCoVisitParts","meetingParts","Boolean","not_co_visit","fromMeetingPartsById","getNonCoVisitParts","getAssignedId","getIsFetching","fromFetchReducer","getMeetings","fromMeetingsReducer","getIsScheduleSaveModalVisible","fromSchedulesReducer","getMeetingCount","fromMeetingsById","getPrivs","isAssistant","console","log","priv","what","ids","byId","byObject","school_part","arrayOfObjects","fromPrivsReducer","replaceTokenFn","stringWithToken","replaceToken","replaceValue","replace","getPartIndexFromSortedPartList","partToAdd","partList","partsByIds","updateMeetingToCake","postData","success","actions","deletePartUpdateTimesThunk","getState","API_URL","updateAllStartTimesThunk","showHideAlertTimed","time","setTimeout","addMeetingSortedThunk","meetingID","meetingDateMoment","meetingExists","addMeetingToCakeThunk","partObjects","batchActions","sortedByDateMeetingIDs","deleteMeetingFromCake","cakeId","meeting","catch","postObject","schedule_id","loadMeetingPartsToCake","values","error","updateObjectArray","meetingStartTime","meetingStartMoment","partIndex","newMeetingStartMoment","formatInsertPart","localMeetingId","meetingPart","formatAssignmentsForPostToCake","deleteMeetingThunk","getScheduleThunk","router","pathname","location","published","multiActions","assigned","idx","assignedObject","formattedDate","meetingAssigned","utc","assignedArray","orderOfAssigned","formattedAssigned","objectCopied","section","matches","part_title","match","combinedObject","assignedObjectById","assignedArrayById","formatAssigned","meeting_note","updateTimes","getSchedulesThunk","parseTime","dateString","converted","isValid","cakeMeetingId","copiedParts","meetingPartIds","meetingPartObject","getActiveMeetingParts","responseData","result","addMeetingPartToCake","resolvedMeetingId","apiMeetingId","rid","ridKey","resolveMeetingId","saveScheduleThunk","formattedSchedule","scheduleObject","formatSchedule","saveToCake","formattedMeetings","mo","formattedAssignedParts","mpm","src","formatAssignedParts","formatMeetingNotes","mn","saveMeetingNotesToCake","endpoint","meetingNotes","isDelete","arr","theHeading","theNote","mapDispatchToProps","addMeetings","asyncActions","connect","fromScheduleReducer","getScheduleDates","meetingCount","slug","meetingLabel","datePickerInputExtraProps","borderTopRightRadius","borderBottomRightRadius","faCalendarAlt","MultipleDatePicker","dates","meetingDateSelected","clickMeetingAddButton","spinner","lg","faFilePdf","href","target","faUsers","MeetingDateTitle","cursor","classes","MeetingTitle","marginBottom","handleChange","mkey","ownProps","md","customInput","dateFormat","onChange","AddPart","partArrayObject","partSelectOptions","min_suffix","trim","selectedIndex","faTimesCircle","toggleCoVisit","coParts","currentNotCoParts","nonCoVisitParts","multiAction","some","r","coP","addPart","firstPart","shift","setMeetingValueOnChange","setChairmanChange","meetingPartsToAddChairmanTo","chairman_part","batchAction","toggleSaveModal","saveButtonPress","diplayPartPicker","getDisplayPartPicker","chairmen","meetingChairmen","auxCounselors","checkCoVisit","isCoVisit","showPartPicker","checkBoxName","pleaseSelect","auxCounselorsWithPleaseSelect","meetingChairmenWithPleaseSelect","displayPicker","partArrayAsObjects","addPartButton","addPartPicker","marginRight","form","check","inline","checked","bsSize","htmlFor","for","xs","faSave","faTrashAlt","PartTitle","fontSize","fontWeight","Meeting","PartTitles","ClickableIconWrappedInDiv","clicked","library","fab","faUndoAlt","faMusic","Part","getSelectList","resetPartValues","assistant_prefix","aux_assistant_id","aux_person_id","assistant","assistant_id","no_assign","deletePart","getElements","has_auxiliary","updateTime","replace_token","pointer","mainHallAssigned","mainHallAssistant","auxAssigned","auxAssistant","marginTop","defaultClasses","assistantWithNoAssign","assistant2ndSchool","savedStartTimeFormatted","marginLeft","sm","width","maxLength","textAlign","field_name","is_assistant","selectItems","placeholder","isSong","partName","newPartName","CheckBoxWrapper","extraClasses","MeetingNoteCheckbox","handleAddRemoveMeetingNote","meetingNoteLabel","faMinusCircle","faStickyNote","checkBoxId","isActive","getFieldValue","meetingNoteState","isAdd","cancelMeetingNote","updateMeetingNote","meetingNoteCheckbox","tag","rows","LoadSchedule","selectList","getSchedule","row","updateScheduleStartDate","startDateMoment","dateFormatted","futureMonthEnd","endOf","updateScheduleEndDate","addClick","valueOf","endDateMoment","sch","startDate2Moment","endDate2Moment","dateRangesOverlap","comment","cancelClick","saveClick","buttonConfig","buttonText","clickFunction","selectsStart","autocomplete","borderLeft","borderRight","selectsEnd","CreateModal","showModal","click","isOpen","toggle","buttons","SaveScheduleModal","cancel","schedulePublishedCheck","isChecked","deleteScheduleThunk","styles","SpaceBetween","faExclamationCircle","faCheckCircle","faCheck","faThumbsUp","faQuestion","faQuestionCircle","faExclamationTriangle","AlertMessage","icons","in","timeout","classNames","enter","enterActive","exit","exitActive","unmountOnExit","transition","baseClassActive","fade","clamEdit","getParts","search","params","queryString","updateAllStartTimes","meetingsArrayObject","getMeetingParts","partComponentList","partFields","mySchema","schema","Entity","normalizedData","normalize","entities","hash","withRouter","initialStateDev","insertAfterPart","startOf","history","createBrowserHistory","middleware","createLogger","thunk","batchDispatchMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","connectRouter","initialState","applyMiddleware","routerMiddleware","root","document","getElementById","getAttribute","hostname","ReactDOM","render"],"mappings":"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","file":"static/js/main.77a7a89c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MeetingTitle\":\"MeetingTitle_MeetingTitle__3anMe\"};","export const Aux = (props) => props.children\nexport default Aux\n","import React from \"react\";\nimport Aux from './Aux'\n\nconst Heading = props => {\n    const { scheduleMonth, scheduleYear, children, scheduleId } = props;\n    const monthYear = scheduleId ? (\n        <Aux>{\" \"}<small>\n        {scheduleMonth} {scheduleYear}\n        </small>\n        </Aux>\n    ): null;\n    return (\n        <div className=\"row\">\n        <div className=\"col-lg-12\">\n            <h2>\n                Christian Life and Ministry Schedule{monthYear}\n            </h2>\n            <hr />\n            {children}\n        </div>\n        </div>\n    );\n};\n\nexport default Heading;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Aux } from \"../Components/Aux\";\nimport React from \"react\";\nexport const Spinner = props => {\n    return (\n        <Aux>\n            <FontAwesomeIcon icon={faSpinner} spin size=\"1x\" /> Loading ...\n        </Aux>\n    );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport React from \"react\";\n\nconst IconLink = props => {\n    //console.log(props)\n    const { display, icon, ...linkProps } = props;\n    //console.log(linkProps)\n    if (display) {\n        return (\n            <a\n                {...linkProps}\n                className=\"btn btn-sm btn-link\"\n                style={{ textDecoration: \"none\" }}\n            >\n                <FontAwesomeIcon icon={icon} /> {linkProps.title}\n            </a>\n        );\n    } else {\n        return null;\n    }\n};\n\nexport default IconLink;\n","const DateUtilities = {\n  pad(value, length) {\n    while (value.length < length) value = `0${value}`;\n    return value;\n  },\n\n  clone(date) {\n    return new Date(\n      date.getFullYear(),\n      date.getMonth(),\n      date.getDate(),\n      date.getHours(),\n      date.getMinutes(),\n      date.getSeconds(),\n      date.getMilliseconds()\n    );\n  },\n\n  toString(date) {\n    return `${date.getFullYear()}-${DateUtilities.pad((date.getMonth() + 1).toString(), 2)}-${DateUtilities.pad(\n      date.getDate().toString(),\n      2\n    )}`;\n  },\n\n  toDayOfMonthString(date) {\n    return DateUtilities.pad(date.getDate().toString());\n  },\n\n  toMonthAndYearString(date) {\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ];\n    return `${months[date.getMonth()]} ${date.getFullYear()}`;\n  },\n\n  moveToDayOfWeek(date, dayOfWeek) {\n    while (date.getDay() !== dayOfWeek) date.setDate(date.getDate() - 1);\n    return date;\n  },\n\n  isSameDay(first, second) {\n    return (\n      first.getFullYear() === second.getFullYear() &&\n      first.getMonth() === second.getMonth() &&\n      first.getDate() === second.getDate()\n    );\n  },\n\n  dateIn(datesArray, date) {\n    return datesArray.filter(day => !DateUtilities.isSameDay(day, date)).length !== datesArray.length;\n  },\n\n  isBefore(first, second) {\n    if (this.isSameDay(first, second)) return;\n    return first.getTime() < second.getTime();\n  },\n\n  isAfter(first, second) {\n    return first.getTime() > second.getTime();\n  },\n};\n\nexport default DateUtilities;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-weight: 500;\n  height: 20px;\n  line-height: 15px;\n  opacity: 0.5;\n  text-align: center;\n`;\n\nconst StyledSpan = styled.span`\n  width: 42px;\n`;\n\nconst WeekHeader = () => (\n  <StyledDiv>\n    <StyledSpan>S</StyledSpan>\n    <StyledSpan>M</StyledSpan>\n    <StyledSpan>T</StyledSpan>\n    <StyledSpan>W</StyledSpan>\n    <StyledSpan>T</StyledSpan>\n    <StyledSpan>F</StyledSpan>\n    <StyledSpan>S</StyledSpan>\n  </StyledDiv>\n);\n\nexport default WeekHeader;\n","import warning from 'warning';\n\nconst dayAbbreviation = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\nconst monthList = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst monthLongList = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport function dateTimeFormat(locale, options) {\n  warning(\n    locale === 'en-US',\n    `Material-UI: The ${locale} locale is not supported by the built-in DateTimeFormat.\n  Use the \\`DateTimeFormat\\` prop to supply an alternative implementation.`\n  );\n\n  this.format = function(date) {\n    if (options.month === 'short' && options.day === '2-digit' && options.year === 'numeric') {\n      return `${date.getDate()} ${monthList[date.getMonth()]} ${date.getFullYear()}`;\n    } else if (options.year === 'numeric' && options.month === 'numeric' && options.day === 'numeric') {\n      return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n    } else if (options.year === 'numeric' && options.month === 'long') {\n      return `${monthLongList[date.getMonth()]} ${date.getFullYear()}`;\n    } else if (options.weekday === 'narrow') {\n      return dayAbbreviation[date.getDay()];\n    } else if (options.year === 'numeric') {\n      return date.getFullYear().toString();\n    } else if (options.day === 'numeric') {\n      return date.getDate();\n    }\n    warning(false, 'Material-UI: Wrong usage of DateTimeFormat');\n  };\n}\n\nexport function getYear(d) {\n  return d.getFullYear();\n}\n\nexport function setYear(d, year) {\n  const newDate = cloneDate(d);\n  newDate.setFullYear(year);\n  return newDate;\n}\n\nexport function addDays(d, days) {\n  const newDate = cloneDate(d);\n  newDate.setDate(d.getDate() + days);\n  return newDate;\n}\n\nexport function addMonths(d, months) {\n  const newDate = cloneDate(d);\n  newDate.setMonth(d.getMonth() + months);\n  return newDate;\n}\n\nexport function addYears(d, years) {\n  const newDate = cloneDate(d);\n  newDate.setFullYear(d.getFullYear() + years);\n  return newDate;\n}\n\nexport function cloneDate(d) {\n  return new Date(d.getTime());\n}\n\nexport function cloneAsDate(d) {\n  const clonedDate = cloneDate(d);\n  clonedDate.setHours(0, 0, 0, 0);\n  return clonedDate;\n}\n\nexport function getDaysInMonth(d) {\n  const resultDate = getFirstDayOfMonth(d);\n  resultDate.setMonth(resultDate.getMonth() + 1);\n  resultDate.setDate(resultDate.getDate() - 1);\n  return resultDate.getDate();\n}\n\nexport function getFirstDayOfMonth(d) {\n  return new Date(d.getFullYear(), d.getMonth(), 1);\n}\n\nexport function getFirstDayOfWeek() {\n  const now = new Date();\n  return new Date(now.setDate(now.getDate() - now.getDay()));\n}\n\nexport function getWeekArray(d, firstDayOfWeek) {\n  const dayArray = [];\n  const daysInMonth = getDaysInMonth(d);\n  const weekArray = [];\n  let week = [];\n\n  for (let i = 1; i <= daysInMonth; i++) {\n    dayArray.push(new Date(d.getFullYear(), d.getMonth(), i));\n  }\n\n  const addWeek = week => {\n    const emptyDays = 7 - week.length;\n    for (let i = 0; i < emptyDays; ++i) {\n      week[weekArray.length ? 'push' : 'unshift'](null);\n    }\n    weekArray.push(week);\n  };\n\n  dayArray.forEach(day => {\n    if (week.length > 0 && day.getDay() === 0) {\n      addWeek(week);\n      week = [];\n    }\n    week.push(day);\n    if (dayArray.indexOf(day) === dayArray.length - 1) {\n      addWeek(week);\n    }\n  });\n\n  return weekArray;\n}\n\nexport function localizedWeekday(DateTimeFormat, locale, day, firstDayOfWeek) {\n  const weekdayFormatter = new DateTimeFormat(locale, { weekday: 'narrow' });\n  const firstDayDate = getFirstDayOfWeek();\n\n  return weekdayFormatter.format(addDays(firstDayDate, day + firstDayOfWeek));\n}\n\n// Convert date to ISO 8601 (YYYY-MM-DD) date string, accounting for current timezone\nexport function formatIso(date) {\n  return new Date(`${date.toDateString()} 12:00:00 +0000`).toISOString().substring(0, 10);\n}\n\nexport function isEqualDate(d1, d2) {\n  return (\n    d1 &&\n    d2 &&\n    d1.getFullYear() === d2.getFullYear() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getDate() === d2.getDate()\n  );\n}\n\nexport function isBeforeDate(d1, d2) {\n  const date1 = cloneAsDate(d1);\n  const date2 = cloneAsDate(d2);\n\n  return date1.getTime() < date2.getTime();\n}\n\nexport function isAfterDate(d1, d2) {\n  const date1 = cloneAsDate(d1);\n  const date2 = cloneAsDate(d2);\n\n  return date1.getTime() > date2.getTime();\n}\n\nexport function isBetweenDates(dateToCheck, startDate, endDate) {\n  return !isBeforeDate(dateToCheck, startDate) && !isAfterDate(dateToCheck, endDate);\n}\n\nexport function monthDiff(d1, d2) {\n  let m;\n  m = (d1.getFullYear() - d2.getFullYear()) * 12;\n  m += d1.getMonth();\n  m -= d2.getMonth();\n  return m;\n}\n\nexport function yearDiff(d1, d2) {\n  return ~~(monthDiff(d1, d2) / 12);\n}\n\nexport const defaultUtils = {\n  getYear,\n  setYear,\n  addDays,\n  addMonths,\n  addYears,\n  getFirstDayOfMonth,\n  getWeekArray,\n  monthDiff,\n};\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport DateUtilities from './utils';\nimport { dateTimeFormat } from './dateUtils';\n\nconst StyledWeek = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  height: 32px;\n  margin-bottom: 2px;\n`;\n\nconst DayButton = styled.button`\n  border: 10px;\n  box-sizing: border-box;\n  display: inline-block;\n  font-family: Roboto, sans-serif;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  cursor: pointer;\n  text-decoration: none;\n  margin: 0px;\n  padding: 4px 0px;\n  outline: none;\n  font-size: inherit;\n  font-weight: 400;\n  position: relative;\n  z-index: 1;\n  width: 42px;\n  background: none;\n`;\n\nconst Blank = styled.div`\n  border: 10px;\n  box-sizing: border-box;\n  display: inline-block;\n  font-family: Roboto, sans-serif;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  text-decoration: none;\n  margin: 0px;\n  padding: 4px 0px;\n  outline: none;\n  font-size: inherit;\n  font-weight: 400;\n  position: relative;\n  z-index: 1;\n  width: 42px;\n  background: none;\n`;\n\nconst DayBackdrop = styled.div`\n  background-color: rgb(0, 151, 167);\n  height: 32px;\n  border-radius: 50%;\n  left: 1px;\n  opacity: ${({ selected }) => (selected ? '1' : '0')};\n  position: absolute;\n  top: 0px;\n  transform: scale(${({ selected }) => (selected ? '1' : '0')});\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  width: 32px;\n`;\n\nconst Day = styled.div`\n  color: ${({ selected }) => (selected ? 'rgb(255, 255, 255)' : 'rgba(0, 0, 0, 0.87)')};\n  font-weight: ${({ today }) => (today ? 'bold' : '400')};\n  font-size: ${({ today }) => (today ? '1.1rem' : 'auto')};\n  position: relative;\n  color: ${({ disabled }) => (disabled ? 'lightgrey' : 'auto')};\n`;\n\nclass Week extends Component {\n  onSelect = day => {\n    if (!this.isDisabled(day)) this.props.onSelect(day);\n  };\n\n  isDisabled = day => {\n    let minDate = this.props.minDate,\n      maxDate = this.props.maxDate;\n\n    return (minDate && DateUtilities.isBefore(day, minDate)) || (maxDate && DateUtilities.isAfter(day, maxDate));\n  };\n\n  isSelected = day => this.props.selectedDates && DateUtilities.dateIn(this.props.selectedDates, day);\n\n  render() {\n    const dateInNumberic = new dateTimeFormat('en-US', {\n      day: 'numeric',\n      month: 'numeric',\n      year: 'numeric',\n    });\n\n    const dateToday = dateInNumberic.format(new Date());\n\n    const dayInNumeric = new dateTimeFormat('en-US', {\n      day: 'numeric',\n    });\n    return (\n      <StyledWeek>\n        {this.props.week.map((day, i) => {\n          if (day) {\n            const isToday = day && dateToday === dateInNumberic.format(day);\n            const isDisabled = this.isDisabled(day);\n            const isSelected = this.isSelected(day);\n\n            return (\n              <DayButton\n                key={`day-${day}`}\n                onClick={(e) => {e.preventDefault(); this.onSelect(day)}}\n                disabled={isDisabled}\n                selected={isSelected}\n              >\n                <DayBackdrop selected={isSelected} />\n                <Day selected={isSelected} disabled={isDisabled} today={isToday}>\n                  {dayInNumeric.format(day)}\n                </Day>\n              </DayButton>\n            );\n          }\n          return <Blank key={`blank-${i}`} />;\n        })}\n      </StyledWeek>\n    );\n  }\n}\n\nexport default Week;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Week from './Week';\nimport { defaultUtils as utils } from './dateUtils';\n\nconst MonthWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  font-weight: 400;\n  height: 180px;\n  line-height: 2px;\n  position: relative;\n  text-align: center;\n  moz-padding-start: 0;\n`;\n\nclass Weeks extends Component {\n  render() {\n    return <MonthWrapper>{this.renderWeeks(this.props.displayDate)}</MonthWrapper>;\n  }\n\n  renderWeeks = () => {\n    const weekArray = utils.getWeekArray(this.props.displayDate, 1);\n\n    return weekArray.map(\n      (s, i) => (\n        <Week\n          key={i}\n          week={s}\n          selected={this.props.selected}\n          selectedDates={this.props.selectedDates}\n          onSelect={this.props.onSelect}\n          minDate={this.props.minDate}\n          maxDate={this.props.maxDate}\n        />\n      ),\n      this\n    );\n  };\n}\n\nexport default Weeks;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { dateTimeFormat } from './dateUtils';\nimport styled from 'styled-components';\n\nconst Icon = styled.button`\n  border: none;\n  font-family: Roboto, sans-serif;\n  text-decoration: none;\n  outline: none;\n  position: relative;\n  z-index: 1;\n  height: 36px;\n  line-height: 36px;\n  overflow: hidden;\n  background-color: rgba(0, 0, 0, 0);\n  text-align: center;\n\n  font-weight: bold;\n  padding: 5px 8px;\n  border-radius: 3px;\n  cursor: pointer;\n  font-style: normal;\n  font-size: 0.7em;\n  :hover {\n    color: rgb(0, 188, 212);\n  }\n`;\n\nconst Root = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: inherit;\n  height: 42px;\n`;\n\nconst TitleDiv = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  text-align: center;\n  width: 100%;\n`;\n\nconst TitleText = styled.div`\n  height: inherit;\n  padding-top: 10px;\n`;\n\nclass CalendarToolbar extends Component {\n  static propTypes = {\n    displayDate: PropTypes.object.isRequired,\n    nextMonth: PropTypes.bool,\n    onMonthChange: PropTypes.func,\n    prevMonth: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    nextMonth: true,\n    prevMonth: true,\n  };\n\n  state = {\n    transitionDirection: 'up',\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.displayDate !== this.props.displayDate) {\n      const direction = nextProps.displayDate > this.props.displayDate ? 'left' : 'right';\n      this.setState({\n        transitionDirection: direction,\n      });\n    }\n  }\n\n  handleTouchTapPrevMonth = e => {\n    e.preventDefault();\n    if (this.props.onMonthChange) {\n      this.props.onMonthChange(-1);\n    }\n  };\n\n  handleTouchTapNextMonth = e => {\n    e.preventDefault();\n    if (this.props.onMonthChange) {\n      this.props.onMonthChange(1);\n    }\n  };\n\n  render() {\n    const { displayDate } = this.props;\n\n    const dateTimeFormatted = new dateTimeFormat('en-US', {\n      month: 'long',\n      year: 'numeric',\n    }).format(displayDate);\n\n    return (\n      <Root>\n        <Icon disabled={!this.props.prevMonth} onClick={this.handleTouchTapPrevMonth}>\n          {String.fromCharCode(9664)}\n        </Icon>\n\n        <TitleDiv>\n          <TitleText key={dateTimeFormatted}>{dateTimeFormatted}</TitleText>\n        </TitleDiv>\n        <Icon disabled={!this.props.nextMonth} onClick={this.handleTouchTapNextMonth}>\n          {String.fromCharCode(9654)}\n        </Icon>\n      </Root>\n    );\n  }\n}\n\nexport default CalendarToolbar;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin: 0px;\n  max-height: 42px;\n  padding: 0px;\n`;\n\nconst Button = styled.button`\n  border: 10px;\n  box-sizing: border-box;\n  display: inline-block;\n  font-family: Roboto, sans-serif;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  cursor: pointer;\n  text-decoration: none;\n  margin: 4px 8px 8px 0px;\n  padding: 0px;\n  outline: none;\n  font-size: inherit;\n  font-weight: inherit;\n  position: relative;\n  z-index: 1;\n  height: 32px;\n  line-height: 32px;\n  min-width: 64px;\n  color: rgb(0, 188, 212);\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  border-radius: 2px;\n  user-select: none;\n  overflow: hidden;\n  background-color: rgba(0, 0, 0, 0);\n  text-align: center;\n  max-height: 32px;\n`;\n\nconst CalendarActionButton = props => (\n  <Root>\n    <Button onClick={props.onCancel}>Cancel</Button>\n    <Button onClick={props.onOk}>Ok</Button>\n  </Root>\n);\n\nexport default CalendarActionButton;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { dateTimeFormat } from './dateUtils';\n// background-color: rgb(0, 188, 212);\nconst Root = styled.div`\n  width: 165px;\n  height: 280px;\n  float: left;\n  font-weight: 700;\n  background-color: rgb(240, 240, 240);\n  display: inline-block;\n  border-top-left-radius: .25rem;\n  border-top-right-radius: 0px;\n  border-bottom-left-radius: .25rem;\n  color: rgb(0, 0, 0);\n  padding: 20px;\n  box-sizing: border-box;\n  overflow-y: auto;\n`;\n\nconst DateTime = styled.div`\n  position: relative;\n  overflow: hidden;\n  height: 16px;\n  margin: 0px 0px 10px;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 16px;\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n`;\n\nclass DateDisplay extends Component {\n  state = {\n    selectedYear: false,\n  };\n\n  componentWillMount() {\n    if (!this.props.monthDaySelected) {\n      this.setState({ selectedYear: true });\n    }\n  }\n\n  getFormatedDate = date => {\n    const dateTime = new dateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit',\n    }).format(date);\n\n    return `${dateTime}`;\n  };\n\n  render() {\n    const { selectedDates } = this.props;\n\n    return (\n      <Root>\n        {selectedDates.map(date => <DateTime key={`${date.toString()}`}>{this.getFormatedDate(date)}</DateTime>)}\n      </Root>\n    );\n  }\n}\n\nexport default DateDisplay;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport WeekHeader from './WeekHeader';\nimport Month from './Month';\nimport { defaultUtils as utils } from './dateUtils';\nimport CalendarToolbar from './CalendarToolbar';\nimport CalendarButtons from './CalendarButtons';\nimport DateDisplay from './DateDisplay';\n\nconst Root = styled.div`\n  color: rgba(0, 0, 0, 0.87);\n  user-select: none;\n  ${({ hideCalendarDate }) => !hideCalendarDate && 'width: 400px'};\n  overflow: hidden;\n`;\n\nconst CalendarContainer = styled.div`\n  display: flex;\n  place-content: space-between;\n  flex-direction: column;\n  font-size: 12px;\n  font-weight: 400;\n  padding: 0px 4px;\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n`;\n\nconst StyledCalendar = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 280px;\n`;\n\nclass Calendar extends Component {\n  static defaultProps = {\n    disableYearSelection: false,\n    initialDate: new Date(),\n  };\n\n  state = {\n    displayDate: undefined,\n    displayMonthDay: undefined,\n    selectedDate: undefined,\n    transitionDirection: 'left',\n    open: false,\n    transitionEnter: true,\n  };\n\n  componentWillMount() {\n    this.setState({\n      displayDate: utils.getFirstDayOfMonth(this.props.initialDate),\n      selectedDate: this.props.initialDate,\n      displayMonthDay: !this.props.openToYearSelection,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.initialDate !== this.props.initialDate) {\n      const date = nextProps.initialDate || new Date();\n      this.setState({\n        displayDate: utils.getFirstDayOfMonth(date),\n        selectedDate: date,\n      });\n    }\n  }\n\n  getMinDate() {\n    return this.props.minDate || utils.addYears(new Date(), -100);\n  }\n\n  getMaxDate() {\n    return this.props.maxDate || utils.addYears(new Date(), 100);\n  }\n\n  getSelectedDate() {\n    return this.state.selectedDate;\n  }\n\n  getToolbarInteractions() {\n    return {\n      prevMonth: utils.monthDiff(this.state.displayDate, this.getMinDate()) > 0,\n      nextMonth: utils.monthDiff(this.state.displayDate, this.getMaxDate()) < 0,\n    };\n  }\n\n  handleMonthChange = months => {\n    const direction = months >= 0 ? 'left' : 'right';\n    this.setState({\n      transitionDirection: direction,\n      displayDate: utils.addMonths(this.state.displayDate, months),\n    });\n  };\n\n  calendarRefs = {};\n\n  render() {\n    const toolbarInteractions = this.getToolbarInteractions();\n    return (\n      <Root hideCalendarDate={this.props.hideCalendarDate} visible={this.props.visible}>\n        <DateDisplay selectedDates={this.props.selectedDates} />\n        <StyledCalendar>\n          <CalendarContainer>\n            <CalendarToolbar\n              displayDate={this.state.displayDate}\n              onMonthChange={this.handleMonthChange}\n              prevMonth={toolbarInteractions.prevMonth}\n              nextMonth={toolbarInteractions.nextMonth}\n            />\n            <WeekHeader />\n            <Month\n              view={this.props.view}\n              selected={this.props.selected}\n              displayDate={this.state.displayDate}\n              key={this.state.displayDate.toDateString()}\n              selectedDates={this.props.selectedDates}\n              minDate={this.getMinDate()}\n              maxDate={this.getMaxDate()}\n              onSelect={this.props.onSelect}\n              ref={ref => (this.calendarRefs.calendar = ref)}\n            />\n          </CalendarContainer>\n          <CalendarButtons onCancel={this.props.onCancel} onOk={this.props.onOk} />\n        </StyledCalendar>\n      </Root>\n    );\n  }\n}\n\nexport default Calendar;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport DateUtilities from './utils';\nimport Calendar from './Calendar';\nimport Aux from '../../../Aux'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst StyledDatePicker = styled.div`\n  position: fixed;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  z-index: 1500;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  transition: left 0ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  padding: 16px 0px 0px;\n  min-height: 300px;\n  min-width: 300px;\n  ${({ open }) => !open && 'display: none'};\n`;\n\nconst Backdrop = styled.div`\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  top: 0px;\n  left: 0px;\n  opacity: 1;\n  background-color: rgba(0, 0, 0, 0.54);\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  will-change: opacity;\n  transform: translateZ(0px);\n  transition: left 0ms cubic-bezier(0.23, 1, 0.32, 1) 0ms, opacity 400ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  z-index: 1400;\n`;\n\nconst Dialog = styled.div`\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  position: relative;\n  width: 400px;\n  max-width: 768px;\n  margin: 0px auto;\n  z-index: 1500;\n  opacity: 1;\n  transform: translate(0px, 64px);\n`;\n// tgn change border-radius\nconst DialogInnerWrap = styled.div`\n  color: rgba(0, 0, 0, 0.87);\n  background-color: rgb(255, 255, 255);\n  transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;\n  box-sizing: border-box;\n  font-family: Roboto, sans-serif;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 14px 45px, rgba(0, 0, 0, 0.22) 0px 10px 18px;\n  border-radius: .25rem;\n`;\n\nconst DialogContent = styled.div`\n  font-size: 16px;\n  color: rgba(0, 0, 0, 0.6);\n  padding: 0px;\n  box-sizing: border-box;\n  overflow-y: hidden;\n  border-top: none;\n  border-bottom: none;\n  min-height: 286px;\n  min-width: 400px;\n`;\n\nclass DatePicker extends Component {\n  constructor(props) {\n    super(props);\n\n    const def = props.selected || new Date();\n\n    this.state = {\n      view: DateUtilities.clone(def),\n      selected: DateUtilities.clone(def),\n      selectedDates: props.selected ? [DateUtilities.clone(def)] : [],\n      minDate: null,\n      maxDate: null,\n      open: false,\n    };\n  }\n\n  onSelect = day => {\n    const { selectedDates } = this.state;\n    if (DateUtilities.dateIn(selectedDates, day)) {\n      this.setState({\n        selectedDates: selectedDates.filter(date => !DateUtilities.isSameDay(date, day)),\n      });\n    } else {\n      this.setState({ selectedDates: [...selectedDates, day] });\n    }\n  };\n\n  onSubmit = () => {};\n\n  toggleOpen = () => {\n\n    this.setState({ open: !this.state.open });\n\n\n  };\n\n  handleCancel = (e) => {\n    e.preventDefault()\n    // tgn clear onCancel\n    this.setState({ selectedDates: []})\n    this.dismiss();\n  };\n\n  handleRequestClose = () => {\n    this.dismiss();\n  };\n\n  handleOk = (e) => {\n    e.preventDefault();\n    if (this.props.onSubmit) {\n      this.props.onSubmit(this.state.selectedDates);\n    }\n\n    this.setState({\n      open: false,\n      selectedDates: []\n    });\n  };\n\n  dismiss = () => {\n    if (this.props.onDismiss && this.state.open) {\n      this.props.onDismiss();\n    }\n\n    this.setState({\n      open: false,\n    });\n  };\n\n  render() {\n    const { children, extraInputProps } = this.props;\n\n    return (\n      <Aux>\n        {children ? (\n          React.cloneElement(React.Children.only(children), {\n            onClick: this.toggleOpen,\n            value: this.state.selectedDates.map(date => DateUtilities.toString(date)).join(', '),\n            readOnly: true,\n          })\n        ) : (\n          <button\n            type=\"text\"\n            className=\"form-control form-control-sm\"\n            { ...extraInputProps }\n            readOnly\n            //value={this.state.selectedDates.map(date => DateUtilities.toString(date)).join(', ')}\n            onClick={this.toggleOpen}\n          ><FontAwesomeIcon icon={faPlusCircle} /> Add</button>\n        )}{' '}\n        <StyledDatePicker open={this.state.open}>\n          <Dialog>\n            <DialogInnerWrap>\n              <DialogContent>\n                <Calendar\n                  initialDate={this.props.scheduleStartDate}\n                  visible={this.state.visible}\n                  view={this.state.view}\n                  selected={this.state.selected}\n                  selectedDates={this.state.selectedDates}\n                  onSelect={this.onSelect}\n                  minDate={this.props.minDate}\n                  maxDate={this.props.maxDate}\n                  onCancel={this.handleCancel}\n                  onOk={this.handleOk}\n                />\n              </DialogContent>\n            </DialogInnerWrap>\n          </Dialog>\n          <Backdrop />\n        </StyledDatePicker>\n      </Aux>\n    );\n  }\n}\n\nexport default DatePicker;\n","import DatePicker from './components/Datepicker';\n\nexport default DatePicker;\n","export const actionTypes = {\n    ADD_AND_SORT_MEETING: \"ADD_AND_SORT_MEETING\",\n    ADD_ASSIGNED_ID_TO_PARTS: \"ADD_ASSIGNED_ID_TO_PARTS\",\n    ADD_CO_PART: \"ADD_CO_PART\",\n    ADD_MEETING_ID_MAP: \"ADD_MEETING_ID_MAP\",\n    ADD_MEETING_NOTE_FROM_CAKE: \"ADD_MEETING_NOTE_FROM_CAKE\",\n    ADD_MEETING: \"ADD_MEETING\",\n    ADD_MESSAGE: \"ADD_MESSAGE\",\n    ADD_PART_IDS: \"ADD_PART_IDS\",\n    ADD_PART_PICKER: \"ADD_PART_PICKER\",\n    ADD_PARTS_OBJECT: \"ADD_PARTS_OBJECT\",\n    ADD_PARTS: \"ADD_PARTS\",\n    ADD_SINGLE_PARTS_OBJECT: \"ADD_SINGLE_PARTS_OBJECT\",\n    ADD_TO_MEETING_PARTS_BY_ID: \"ADD_TO_MEETING_PARTS_BY_ID\",\n    BULK_UPDATE_MEETING_PARTS: \"BULK_UPDATE_MEETING_PARTS\",\n    CANCEL_MEETING_NOTE: \"CANCEL_MEETING_NOTE\",\n    CLEAR_MEETINGS: \"CLEAR_MEETINGS\",\n    CO_VISIT: \"CO_VISIT\",\n    CONFIGURE_MEETING_DATE: \"CONFIGURE_MEETING_DATE\",\n    DELETE_CO_PART: \"DELETE_CO_PART\",\n    DELETE_MEETING_NOTE_ID: \"DELETE_MEETING_NOTE_ID\",\n    DELETE_MEETING_OBJECT: \"DELETE_MEETING_OBJECT\",\n    DELETE_MEETING: \"DELETE_MEETING\",\n    DELETE_PART: \"DELETE_PART\",\n    FETCH_FAIL: \"FETCH_FAIL\",\n    FETCH_START: \"FETCH_START\",\n    FETCH_SUCCESS: \"FETCH_SUCCESS\",\n    HIDE_ALERT: \"HIDE_ALERT\",\n    HIDE_PART_PICKER: \"HIDE_PART_PICKER\",\n    INSERT_CO_PART: \"INSERT_CO_PART\",\n    INSERT_PART: \"INSERT_PART\",\n    LOAD_MEETINGS_BY_ID: \"LOAD_MEETINGS_BY_ID\",\n    LOAD_PRIVS: \"LOAD_PRIVS\",\n    LOAD_SCHEDULE: \"LOAD_SCHEDULE\",\n    LOAD_SCHEDULES: \"LOAD_SCHEDULES\",\n    MODAL_OK: \"MODAL_OK\",\n    POPULATE_MEETING_PARTS_BY_ID: \"POPULATE_MEETING_PARTS_BY_ID\",\n    POPULATE_MEETING_PARTS_FROM_CAKE: \"POPULATE_MEETING_PARTS_FROM_CAKE\",\n    REMOVE_MEETING_ID_MAP: \"REMOVE_MEETING_ID_MAP\",\n    REMOVE_MEETING_PARTS: \"REMOVE_MEETING_PARTS\",\n    REMOVE_MESSAGE: \"REMOVE_MESSAGE\",\n    RESET_PART_VALUES: \"RESET_PART_VALUES\",\n    SET_API_URL: \"SET_API_URL\",\n    SET_MEETING_DATE_BY_MEETING_ID: \"SET_MEETING_DATE_BY_MEETING_ID\",\n    SET_MEETING_VALUE: \"SET_MEETING_VALUE\",\n    SET_SCHEDULE_DATA: \"SET_SCHEDULE_DATA\",\n    SET_SCHEDULE_END_DATE: \"SET_SCHEDULE_END_DATE\",\n    SET_SCHEDULE_ID: \"SET_SCHEDULE_ID\",\n    SET_SCHEDULE_START_DATE: \"SET_SCHEDULE_START_DATE\",\n    SHOW_ALERT: \"SHOW_ALERT\",\n    SORTED_MEETINGS: \"SORTED_MEETINGS\",\n    TOGGLE_MEETING_NOTE: \"TOGGLE_MEETING_NOTE\",\n    TOGGLE_SAVE_SCHEDULE_MODAL: \"TOGGLE_SAVE_SCHEDULE_MODAL\",\n    TOGGLE_SCHEDULE_MODAL: \"TOGGLE_SCHEDULE_MODAL\",\n    UPDATE_ALL_START_TIMES: \"UPDATE_ALL_START_TIMES\",\n    UPDATE_ALLOW: \"UPDATE_ALLOW\",\n    UPDATE_ASSIGNED_ID: \"UPDATE_ASSIGNED_ID\",\n    UPDATE_FORM: \"UPDATE_FORM\",\n    UPDATE_FORMDATA: \"UPDATE_FORMDATA\",\n    UPDATE_MEETING_NOTE_ID: \"UPDATE_MEETING_NOTE_ID\",\n    UPDATE_MEETING_NOTE: \"UPDATE_MEETING_NOTE\",\n    UPDATE_MEETING_PART: \"UPDATE_MEETING_PART\",\n    UPDATE_START_TIME: \"UPDATE_START_TIME\",\n    UPDATE_STOP: \"UPDATE_STOP\",\n    UPDATE_TIMES: \"UPDATE_TIMES\"\n};\n\nexport default actionTypes;\n","import actionTypes from \"./actionTypes\";\n\nexport const hideAddPart = () => ({\n    type: actionTypes.HIDE_PART_PICKER\n});\nexport const deleteCoParts = (meetingId, partId) => {\n    return {\n        type: actionTypes.DELETE_CO_PART,\n        meetingId: meetingId,\n        partId: partId\n    };\n};\n\nexport const setApiUrl = baseUrl => {\n   // console.log(\"Setting API\", baseUrl);\n    return {\n        type: actionTypes.SET_API_URL,\n        baseUrl: baseUrl\n    };\n};\n\nexport const insertCoPart = (indexNumber, meetingId, partId) => {\n    return {\n        type: actionTypes.INSERT_CO_PART,\n        indexNumber: indexNumber,\n        meetingId: meetingId,\n        partId: partId\n    };\n};\nexport const addCoPart = (meetingId, partId, partObject) => {\n    return {\n        type: actionTypes.ADD_CO_PART,\n        meetingId: meetingId,\n        partId: partId,\n        part: partObject\n    };\n};\n\nexport const clickCoVisit = (meetingId, checkBoxValue) => {\n    return {\n        type: actionTypes.CO_VISIT,\n        meetingId: meetingId,\n        coVisit: checkBoxValue\n    };\n};\nexport const loadMeetingsById = meetingsArray => {\n    return {\n        type: actionTypes.LOAD_MEETINGS_BY_ID,\n        meetingsArray: meetingsArray\n    };\n};\nexport const clearMeetings = () => ({\n    type: actionTypes.CLEAR_MEETINGS\n});\n\nexport const addMeeting = (\n    meetingDate,\n    meetingUUID,\n    chairmanId = null,\n    auxCounselorId = null,\n    coVisit = false,\n    startTime = \"7:30 PM\" ) => {\n    return {\n        type: actionTypes.ADD_MEETING,\n        meetingDate: meetingDate,\n        id: meetingUUID,\n        startTime, // fix this why hard coded?\n        chairmanId: chairmanId,\n        auxCounselorId: auxCounselorId,\n        coVisit: coVisit\n    };\n};\n\nexport const updateForm = (name, value, optionText) => {\n   // console.log('n', name, 'v', value, 'o', optionText)\n    return {\n        type: actionTypes.UPDATE_FORM,\n        name: name,\n        value: value,\n        fieldText: optionText\n    };\n};\n\nexport const addSinglePartsObject = (meetingId, filteredParts) => ({\n    type: actionTypes.ADD_SINGLE_PARTS_OBJECT,\n    partsByIdArray: filteredParts,\n    meetingId: meetingId\n});\nexport const addToMeetingPartsById = (meetingId, newObject, filteredParts) => {\n    return {\n        type: actionTypes.ADD_TO_MEETING_PARTS_BY_ID,\n        meetingId: meetingId,\n        partsObject: newObject,\n        partsByIdArray: filteredParts\n    };\n};\nexport const sortedMeetings = sortedIDArray => {\n    return {\n        type: actionTypes.SORTED_MEETINGS,\n        sortedArray: sortedIDArray\n    };\n};\n\nexport const deleteMeetingObject = meetingId => ({\n    type: actionTypes.DELETE_MEETING_OBJECT,\n    meetingId: meetingId\n});\n\nexport const deleteMeeting = meetingId => ({\n    type: actionTypes.DELETE_MEETING,\n    meetingId\n});\nexport const insertPartUpdateIDFromCake = (meetingId, partId, assignedId) => {\n    return {\n        type: actionTypes.UPDATE_ASSIGNED_ID,\n        meetingId: meetingId,\n        partId: partId,\n        assignedId: assignedId\n    }\n}\nexport const insertPart = (\n    indexNumber,\n    meetingId,\n    partId,\n    partsObjectByIds\n) => ({\n    type: actionTypes.INSERT_PART,\n    indexNumber: indexNumber,\n    meeting_id: meetingId,\n    part_id: partId,\n    showPicker: false,\n    partsObjectByIds: partsObjectByIds\n});\n\nexport const populateMeetingPartsById = (\n    meetingsById,\n    meetings,\n    partsObjectByIds\n) => ({\n    type: actionTypes.POPULATE_MEETING_PARTS_BY_ID,\n    meetingIds: meetingsById,\n    meetings, // find out how to return partsByIds ????\n    partEntities: partsObjectByIds\n});\n\nexport const addPartsObject = normalizedData => {\n    const partEntities = normalizedData.entities.parts;\n    const partsByIdArray = normalizedData.result.parts;\n\n    return {\n        type: actionTypes.ADD_PARTS_OBJECT,\n        partEntities,\n        partsByIdArray\n    };\n};\n\n\n\nexport const updateTime = (meetingId, fieldValue) => ({\n    type: actionTypes.UPDATE_START_TIME,\n    fieldValue,\n    meetingId\n});\n\nexport const updateAllStartTimes = () => ({\n    type: actionTypes.UPDATE_ALL_START_TIMES\n});\n\nexport const updateMeetingPartAssignedID = (meetingId, response) => {\n    return {\n        type: actionTypes.ADD_ASSIGNED_ID_TO_PARTS,\n        meetingId,\n        response\n     }\n}\n\nexport const updateMeetingPart = action => {\n    const { fieldValue: text, meetingId, partId, fieldName } = action\n    return {\n        type: actionTypes.UPDATE_MEETING_PART,\n        text,\n        meetingId,\n        partId,\n        fieldName\n    };\n};\n\nexport const resetValues = (meetingId, partId, indexNumber, partObject) => {\n    return {\n        type: actionTypes.RESET_PART_VALUES,\n        meetingId,\n        partId,\n        indexNumber,\n        partObject\n    };\n};\n\nexport const deletePart = (part_id, meeting_id, indexNumber) => ({\n    type: actionTypes.DELETE_PART,\n    meeting_id,\n    part_id,\n    indexNumber\n});\n\nexport const addPartPicker = (meetingId, indexNumber) => ({\n    type: actionTypes.ADD_PART_PICKER,\n    meetingId,\n    indexNumber\n});\n\nexport const setScheduleStartDate = startDate => ({\n    type: actionTypes.SET_SCHEDULE_START_DATE,\n    startDate\n});\n\nexport const setScheduleEndDate = endDate => ({\n    type: actionTypes.SET_SCHEDULE_END_DATE,\n    endDate\n});\n\nexport const setMeetingDate = meetingDate => ({\n    type: actionTypes.CONFIGURE_MEETING_DATE,\n    meetingDate\n});\n\nexport const fetchStart = () => ({\n    type: actionTypes.FETCH_START,\n    isFetching: true\n});\n\nexport const fetchSuccess = () => ({\n    type: actionTypes.FETCH_SUCCESS,\n    isFetching: false\n});\n\nexport const fetchFail = statusText => ({\n    type: actionTypes.FETCH_FAIL,\n    isFetching: false,\n    statusText\n});\n\nexport const loadPrivs = privs => ({\n    type: actionTypes.LOAD_PRIVS,\n    data: privs\n});\n\nexport const loadSchedules = schedules => ({\n    type: actionTypes.LOAD_SCHEDULES,\n    data: schedules.schedules\n});\n\nexport const loadSchedule = scheduleData => {\n    return {\n        type: actionTypes.LOAD_SCHEDULE,\n        data: scheduleData\n    };\n};\n\nexport const updateMeetingNoteId = (meetingId, meetingNoteId) => {\n    return {\n        type: actionTypes.UPDATE_MEETING_NOTE_ID,\n        meetingId,\n        meetingNoteId\n    }\n}\nexport const deleteMeetingNoteId = (meetingId) => {\n    return {\n        type: actionTypes.DELETE_MEETING_NOTE_ID,\n        meetingId\n    }\n}\n\nexport const updateMeetingNote = (meetingId, fieldName, fieldValue) => {\n    return {\n        type: actionTypes.UPDATE_MEETING_NOTE,\n        meetingId,\n        fieldName,\n        fieldValue\n    };\n};\n\nexport const cancelMeetingNote = meetingId => {\n    return {\n        type: actionTypes.CANCEL_MEETING_NOTE,\n        meetingId\n    };\n};\n\nexport const toggleMeetingNote = (meetingId, add) => {\n    return {\n        type: actionTypes.TOGGLE_MEETING_NOTE,\n        add,\n        meetingId\n    };\n};\n\nexport const populateMeetingPartsByIdFromCake = assignedObject => {\n    return {\n        type: actionTypes.POPULATE_MEETING_PARTS_FROM_CAKE,\n        data: assignedObject\n    };\n};\n\n\nexport const addMeetingNoteFromCake = ( meetingId, meetingNoteId, heading, note, active = true) => {\n    return {\n        type: actionTypes.ADD_MEETING_NOTE_FROM_CAKE,\n        meetingId,\n        heading,\n        note,\n        active,\n        meetingNoteId\n    }\n}\n\nexport const updateAllow = () => ({\n    type: actionTypes.UPDATE_ALLOW\n})\n\nexport const updateStop = () => ({\n    type: actionTypes.UPDATE_STOP\n})\n\nexport const toggleScheduleModal = () => ({\n    type: actionTypes.TOGGLE_SCHEDULE_MODAL\n})\n\nexport const addSchedule = () => {\n    return {\n         type: actionTypes.ADD_SCHEDULE_TO_CAKE\n    }\n}\n\nexport const setScheduleData = (data = {}) => {\n    return {\n        type: actionTypes.SET_SCHEDULE_DATA,\n        data\n    }\n\n}\nexport const showAlert = () => ({ type: actionTypes.SHOW_ALERT })\nexport const hideAlert = () => ({ type: actionTypes.HIDE_ALERT })\n\nexport const addMessage = (message, color) => ({\n    type: actionTypes.ADD_MESSAGE,\n    message,\n    color\n})\n\nexport const setScheduleId = (id) => ( {\n    type: actionTypes.SET_SCHEDULE_ID,\n    scheduleId: id\n });\n\n export const setMeetingDateByMeetingId = (meetingId, meetingDate) => ({\n    type: actionTypes.SET_MEETING_DATE_BY_MEETING_ID,\n    meetingId,\n    meetingDate\n })\n\n export const toggleScheduleSaveModal = () => ({\n     type: actionTypes.TOGGLE_SAVE_SCHEDULE_MODAL\n })\n\n export const setMeetingValue = (meetingId, valueName, value) => {\n     return {\n         type: actionTypes.SET_MEETING_VALUE,\n         meetingId,\n         valueName,\n         value\n     }\n }\n\n export const bulkUpdateMeetingParts = (updateObject) => {\n     return {\n         type: actionTypes.BULK_UPDATE_MEETING_PARTS,\n         updateObject\n     }\n }\n\n export const addMeetingIdMap = (meetingIdLocal, meetingIdCake) => {\n     return {\n         type: actionTypes.ADD_MEETING_ID_MAP,\n         meetingIdLocal,\n         meetingIdCake\n     }\n }\n\n export const removeMeetingIdMap = (meetingIdLocal) => {\n    return {\n        type: actionTypes.REMOVE_MEETING_ID_MAP,\n        meetingIdLocal\n    }\n}\n\nexport const removeMeetingParts = (meetingId) => {\n    return {\n        type: actionTypes.REMOVE_MEETING_PARTS,\n        meetingId\n    }\n}\n\n","import { fetchStart } from \"../Redux/actions/actionCreators\";\nimport uuid from 'uuid/v4'\nimport moment from 'moment'\n\nconst handleErrors = response => {\n    //console.log(response.status + ' ' + response.statusText)\n    if (response.ok) {\n        return response.json()\n    }\n    return response.json().then(err => Promise.reject(err))\n};\n\nconst utils = {\n    isEmptyObject: obj => {\n        return Object.keys(obj).length === 0 && obj.constructor === Object\n    },\n    stringDateToDate: ( strDate ) => {\n        return moment(strDate).toDate()\n    },\n    formatDate: (strDate, outputFormat = 'YYYY-MM-DD') => {\n        return moment(strDate).format(outputFormat)\n    },\n    getUUID: () => uuid(),\n    fetchFromCake: dispatch => {\n        return (url, method = \"GET\", data = null) => {\n            dispatch(fetchStart());\n            let init = {\n                method: method,\n                mode: \"cors\",\n                credentials: \"include\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-type\": \"application/json\"\n                }\n            };\n            if (data) {\n                init.body = JSON.stringify(data);\n            }\n            //console.log(\"fetch start\", url);\n            return fetch(url, init)\n                .then(handleErrors)\n        };\n    },\n    flattenObject: ob => {\n        var toReturn = {};\n\n        for (var i in ob) {\n            if (!ob.hasOwnProperty(i)) continue;\n\n            if (typeof ob[i] === \"object\" && ob[i] !== null) {\n                var flatObject = utils.flattenObject(ob[i]);\n                for (var x in flatObject) {\n                    if (!flatObject.hasOwnProperty(x)) continue;\n\n                    toReturn[i + \".\" + x] = flatObject[x];\n                }\n            } else {\n                toReturn[i] = ob[i];\n            }\n        }\n        return toReturn;\n    }\n};\n\nexport default utils;\n","import actionTypes from \"../actions/actionTypes\";\n\nexport const loadedSchedule = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.LOAD_SCHEDULE: {\n            return action.data;\n        }\n        case actionTypes.CLEAR_MEETINGS: {\n            return {};\n        }\n        default:\n            return state;\n    }\n};\n","import actionTypes from \"../actions/actionTypes\";\nimport moment from \"moment\";\n\nexport const meetings = ( state = {}, action ) => {\n    switch (action.type) {\n        case actionTypes.SET_MEETING_VALUE: {\n            const { meetingId, valueName, value } = action;\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    [valueName]: value\n                }\n            };\n        }\n        case actionTypes.DELETE_CO_PART: {\n            const { partId, meetingId } = action;\n            let parts = state[meetingId].parts.slice();\n            let newParts = parts.filter(x => x !== partId);\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    parts: newParts\n                }\n            };\n        }\n        case actionTypes.INSERT_CO_PART: {\n            const { indexNumber, partId, meetingId } = action;\n            let parts = state[meetingId].parts.slice();\n            parts.splice(indexNumber, 0, partId);\n\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    parts: parts\n                }\n            };\n        }\n        case actionTypes.CO_VISIT: {\n            //console.log(actionTypes.CO_VISIT, action);\n            return {\n                ...state,\n                [action.meetingId]: {\n                    ...state[action.meetingId],\n                    coVisit: action.coVisit\n                }\n            };\n        }\n\n        case actionTypes.UPDATE_START_TIME: {\n            return {\n                ...state,\n                [action.meetingId]: {\n                    ...state[action.meetingId],\n                    startTime: action.fieldValue\n                }\n            };\n        }\n        case actionTypes.INSERT_PART: {\n            let partIdArray = [].concat(state[action.meeting_id].parts);\n\n            partIdArray.splice(action.indexNumber, 0, parseInt(action.part_id));\n\n            return {\n                ...state,\n                [action.meeting_id]: {\n                    ...state[action.meeting_id],\n                    parts: partIdArray\n                }\n            };\n        }\n        case actionTypes.DELETE_PART: {\n            let partIdArray = [...state[action.meeting_id].parts];\n\n            let partIdRemoved = partIdArray.filter(\n                value => action.part_id !== value\n            );\n\n            return {\n                ...state,\n                [action.meeting_id]: {\n                    ...state[action.meeting_id],\n                    parts: partIdRemoved\n                }\n            };\n        }\n\n        case actionTypes.ADD_SINGLE_PARTS_OBJECT: {\n            const { partsByIdArray, meetingId } = action;\n\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    parts: partsByIdArray\n                }\n            };\n        }\n        case actionTypes.CLEAR_MEETINGS: {\n            return {};\n        }\n        /*\n        return {\n         type: actionTypes.ADD_MEETING_ID_MAP,\n         meetingIdLocal: meetingIdLocal,\n         meetingIdCake: meetingIdCake\n     }*/\n        case actionTypes.ADD_MEETING_ID_MAP: {\n\n\n            if ( state[action.meetingIdLocal].hasOwnProperty('parts') ){\n               return {\n                    ...state,\n                    [action.meetingIdLocal]: {\n                        ...state[action.meetingIdLocal],\n                        meeting_id: action.meetingIdCake,\n                        parts: [...state[action.meetingIdLocal].parts]\n                    }\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.meetingIdLocal]: {\n                        ...state[action.meetingIdLocal],\n                        meeting_id: action.meetingIdCake\n                    }\n                }\n            }\n\n        }\n        case actionTypes.ADD_MEETING: {\n            return {\n                ...state,\n                [action.id]: {\n                    date: action.meetingDate,\n                    meeting_id: action.id,\n                    local_id: action.id,\n                    startTime: action.startTime,\n                    coVisit: action.coVisit,\n                    person_id: action.chairmanId,\n                    auxiliary_counselor_id: action.auxCounselorId,\n                    parts: []\n                }\n            };\n        }\n        case actionTypes.DELETE_MEETING_OBJECT: {\n            // yay immuteable\n            return Object.keys(state)\n            .reduce((accum, current) => {\n                if( String(current) !== String(action.meetingId)) {\n                    const oldParts =  state[current]['parts'].slice() || []\n                    accum[current] = {\n                        ...state[current],\n                        parts: oldParts\n                    }\n                }\n                return accum\n            }, {});\n        }\n        case actionTypes.SET_MEETING_DATE_BY_MEETING_ID: {\n            const meetingObject = {\n                ...state[action.meetingId],\n                date: action.meetingDate\n             };\n\n            return {\n                ...state,\n                [action.meetingId]: { ...meetingObject }\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default meetings;\n\nexport const getMeeting = (meetingId, state) => {\n    const meeting = state.meetings[meetingId] || {};\n    return meeting;\n};\n\nexport const getMeetingValue = (meetingId, state, value) => {\n    return getMeeting(meetingId, state)[value] || \"\";\n};\n\nexport const getMeetings = ( meetings, meetingsById ) => {\n    const meetingsArrayObject = meetingsById.map(id => {\n        return meetings[id];\n    });\n\n    return meetingsArrayObject;\n};\n\nexport const isCoVisit = (meetingId, state) => {\n    const { meetings } = state;\n    let coVisit = false;\n\n    if (meetings.hasOwnProperty(meetingId)) {\n        coVisit = meetings[meetingId].coVisit;\n\n    }\n\n    return coVisit;\n};\n\nexport const getMeetingParts = (meetingId, meetings, meetingPartsById) => {\n    const meeting = meetings[meetingId] || { parts:[] };\n    let meetingPartsArrayObject = meeting.parts.map(partId => {\n        return meetingPartsById[meetingId][partId];\n    });\n\n    return meetingPartsArrayObject;\n};\n\nexport const getMeetingIdSortedByDate = (meetings) => {\n    const sortedByDateMeetingIDs = Object.keys(meetings)\n        .map(x => {\n            return {\n                date: moment(meetings[x].date, \"DD/MM/YYYY\"),\n                meetingId: x\n            };\n        })\n        .sort((a, b) => {\n            return a.date - b.date;\n        })\n        .map(x => {\n            return x.meetingId;\n        });\n\n    return sortedByDateMeetingIDs;\n};\n\nexport const getFormattedMeetingForSendingToApi = (meetings, schedule) => {\n\n    const { scheduleId } = schedule\n\n    const formattedObject = Object.keys(meetings).map(obj => {\n        const meeting = meetings[obj];\n        const { coVisit, person_id, meeting_id, auxiliary_counselor_id, date } = meeting;\n        const formattedDate = moment(date, 'DD/MM/YYYY').format('YYYY-MM-DD');\n        return {\n            co_visit: coVisit,\n            person_id: person_id,\n            auxiliary_counselor_id: auxiliary_counselor_id,\n            id: meeting_id,\n            date: formattedDate,\n            schedule_id: scheduleId\n        }\n    })\n\n    return formattedObject\n}\n","import moment from 'moment'\nexport const updateObject = ( oldObject, newValues ) => ({\n        ...oldObject,\n        ...newValues\n    })\n\nexport const calcPartStartTime = (meetings, meetingId, partIds, partEntities, partId) => {\n\n    let totalMinutes = 0\n    let startTime = ''\n    let partStartTime = ''\n    let newPartStartTime = ''\n\n    startTime = meetings[meetingId].startTime\n\n    let haveSeen = false\n\n    partIds.forEach((partIdMap, index) => {\n\n        haveSeen = haveSeen ? true : false;\n\n        if (index === 0) {\n            totalMinutes = 0 // start from 0\n        }\n\n        let partMinutes = parseInt(partEntities[partIdMap].minutes)\n        let counselMinutes = parseInt(partEntities[partIdMap].counsel_mins)\n\n        if (partIdMap === partId) {\n            haveSeen = true\n            partStartTime = moment(startTime, 'h:mmA')\n            newPartStartTime = partStartTime.add(totalMinutes, 'm')\n        }\n\n        if (!haveSeen) {\n            totalMinutes += partMinutes + counselMinutes\n        }\n\n    })\n\n    return newPartStartTime.format()\n\n}\n","import actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"./reducerUtilities\";\nexport const fetchReducer = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_START: {\n            return updateObject(state, { isFetching: true });\n        }\n        case actionTypes.FETCH_SUCCESS: {\n            return updateObject(state, { isFetching: false });\n        }\n        case actionTypes.FETCH_FAIL: {\n            return updateObject(state, {\n                isFetching: false,\n                fetchError: action.statusText\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default fetchReducer;\n\nexport const getIsFetching = state => state.isFetching;\n","import actionTypes from \"../actions/actionTypes\";\n\nexport const partsObjectByIds = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_PARTS_OBJECT: {\n            return action.partEntities;\n        }\n        default:\n            return state;\n    }\n};\nexport default partsObjectByIds;\n\nexport const getCoVisitParts = state => {\n    const coParts = Object.keys(state)\n        .reduce((accum, current) => {\n            if (state[current].co_visit) {\n                return accum.concat(parseInt(current, 10));\n            }\n            return accum\n        }, []);\n\n    return coParts;\n};\n\nexport const getNonCoVisitParts = state => {\n    const nonCoParts = Object.keys(state)\n        .reduce((accum, current) => {\n            if(state[current].not_co_visit){\n                return accum.concat(parseInt(current,10))\n            }\n            return accum\n        }, [])\n\n    return nonCoParts;\n};\n","import { actionTypes } from \"../actions/actionTypes\";\nimport { calcPartStartTime } from \"./reducerUtilities\";\nimport { updateObject } from './reducerUtilities';\n\nexport const meetingPartsById = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_CO_PART: {\n            const { meetingId, partId, part } = action;\n            let newPart = Object.assign({}, part);\n\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    [partId]: {\n                        ...newPart\n                    }\n                }\n            };\n        }\n\n        case actionTypes.ADD_TO_MEETING_PARTS_BY_ID: {\n            const { meetingId, partsObject } = action;\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    ...partsObject\n                }\n            };\n        }\n        case actionTypes.INSERT_PART: {\n            const { meeting_id, part_id, partsObjectByIds } = action;\n\n            return {\n                ...state,\n                [meeting_id]: {\n                    ...state[meeting_id],\n                    [part_id]: partsObjectByIds[part_id]\n                }\n            };\n        }\n        case actionTypes.RESET_PART_VALUES: {\n            const { partId, meetingId, partObject } = action;\n\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    [partId]: partObject\n                }\n            };\n        }\n        case actionTypes.REMOVE_MEETING_PARTS: {\n            let copiedState = JSON.parse(JSON.stringify(state));\n            delete copiedState[action.meetingId];\n            return copiedState;\n        }\n        case actionTypes.UPDATE_ALL_START_TIMES: {\n            const { startTime, meetingId, partId } = action;\n\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    [partId]: {\n                        ...state[meetingId][partId],\n                        start_time: startTime\n                    }\n                }\n            };\n        }\n        case actionTypes.CLEAR_MEETINGS: {\n            return {};\n        }\n\n        case actionTypes.BULK_UPDATE_MEETING_PARTS: {\n            //console.log('updateObject', action.updateObject)\n            /**\n             * state = { meetingId: { partId: { partObject }}}\n             */\n\n            const deepCopy = JSON.parse(JSON.stringify(state));\n            //console.log('dc', deepCopy);\n\n            action.updateObject.forEach(upObj => {\n                deepCopy[upObj.meetingId][upObj.partId][upObj.fieldName] =\n                    upObj.fieldValue;\n            });\n            // console.log('DC', deepCopy);\n            return deepCopy;\n        }\n        case actionTypes.UPDATE_MEETING_PART: {\n            const { meetingId, fieldName, partId, text } = action;\n\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    meeting_id: meetingId,\n                    [partId]: {\n                        ...state[meetingId][partId],\n                        [fieldName]: text\n                    }\n                }\n            };\n        }\n        case actionTypes.POPULATE_MEETING_PARTS_FROM_CAKE: {\n            return updateObject(state, {\n                ...action.data\n            });\n        }\n\n        case actionTypes.ADD_ASSIGNED_ID_TO_PARTS: {\n            const { response, meetingId } = action;\n            let copiedState = JSON.parse(JSON.stringify(state));\n\n            response.forEach(x => {\n                copiedState[meetingId][x.part_id].assigned_id = x.assigned_id;\n            });\n\n            return {\n                ...copiedState\n            };\n        }\n        case actionTypes.UPDATE_ASSIGNED_ID: {\n            const { meetingId, partId, assignedId } = action;\n            // let partObject = { ...state[meetingId][partId] }\n\n            return {\n                ...state,\n                [meetingId]: {\n                    ...state[meetingId],\n                    [partId]: {\n                        ...state[meetingId][partId],\n                        assigned_id: assignedId\n                    }\n                }\n            };\n        }\n        case actionTypes.ADD_MEETING_ID_MAP: {\n            const { meetingIdLocal, meetingIdCake } = action;\n            let copiedState = JSON.parse(JSON.stringify(state));\n\n            Object.keys(copiedState).forEach(meetingId => {\n                if (meetingIdLocal === meetingId) {\n                    Object.keys(copiedState[meetingId]).forEach(partKey => {\n                        copiedState[meetingId][partKey][\n                            \"meeting_id\"\n                        ] = meetingIdCake;\n                    });\n                }\n            });\n\n            return copiedState;\n        }\n        case actionTypes.POPULATE_MEETING_PARTS_BY_ID: {\n            const { meetings, meetingIds, partEntities } = action;\n\n            let newMeetingPartsById = {};\n\n            let newParts = {};\n\n            meetingIds.forEach(x => {\n                let partIds = meetings[x].parts;\n                partIds.forEach((y, index) => {\n                    newParts[y] = {\n                        ...partEntities[y],\n                        songNumber: \"\",\n                        start_time: calcPartStartTime(\n                            meetings,\n                            x,\n                            partIds,\n                            partEntities,\n                            y\n                        )\n                    };\n                });\n                newMeetingPartsById[x] = newParts;\n            });\n\n            return newMeetingPartsById;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default meetingPartsById;\n\nexport const getAssignedId = (meetingId, partId, state) => {\n    return (\n        (getMeetingPart(meetingId, partId, state) || {})[\"assigned_id\"] || null\n    );\n};\n\nexport const getMeetingPart = (meetingId, partId, state) => {\n    return ((state || {})[meetingId] || {})[partId] || null;\n};\n\nexport const getNotCoVisitParts = (meetingId, state) => {\n    const meetingParts = state[meetingId] || {};\n\n    const notCoVisitParts = Object.keys(meetingParts).reduce(\n        (accum, current) => {\n            if (Boolean(meetingParts[current].not_co_visit)) {\n                return accum.concat(parseInt(current));\n            }\n            return accum;\n        },\n        []\n    );\n    return notCoVisitParts;\n};\n","import actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"./reducerUtilities\";\n\nexport const schedule = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_SAVE_SCHEDULE_MODAL: {\n            return updateObject(state, {\n                isModalVisible: !state.isModalVisible\n            });\n        }\n        case actionTypes.TOGGLE_SCHEDULE_MODAL: {\n            return updateObject(state, {\n                showScheduleModal: !state.showScheduleModal\n            });\n        }\n        case actionTypes.SET_SCHEDULE_DATA: {\n            return updateObject(state, {\n                ...action.data\n            });\n        }\n        case actionTypes.SET_SCHEDULE_ID: {\n            const isPublished = !action.scheduleId ? false : state.isPublished;\n\n            return updateObject(state, {\n                scheduleId: action.scheduleId,\n                isPublished: isPublished\n            });\n        }\n        case actionTypes.SET_SCHEDULE_START_DATE: {\n            return updateObject(state, {\n                start_date: action.startDate\n            });\n        }\n        case actionTypes.SET_SCHEDULE_END_DATE: {\n            return updateObject(state, {\n                end_date: action.endDate\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default schedule;\n\nexport const getScheduleDates = state => ({\n    startDate: state.start_date,\n    endDate: state.end_date\n});\n","import actionTypes from '../actions/actionTypes'\n\n\nexport const partsAllIds = (state = [], action) => {\n    switch (action.type) {\n        case actionTypes.ADD_PARTS_OBJECT: {\n            return action.partsByIdArray\n        }\n        default:\n            return state\n    }\n}\n","import { actionTypes } from '../actions/actionTypes'\n\nconst meetingsById = (state = [], action) => {\n    switch (action.type) {\n        case actionTypes.SORTED_MEETINGS: {\n            return action.sortedArray\n        }\n        case actionTypes.CLEAR_MEETINGS: {\n            return []\n        }\n        case actionTypes.LOAD_MEETINGS_BY_ID: {\n            return  action.meetingsArray\n        }\n        case actionTypes.DELETE_MEETING: {\n\n            return state.filter( meetingId => ( String(meetingId) !== String(action.meetingId) ))\n\n        }\n        default:\n            return state\n    }\n}\n\nexport default meetingsById\n\nexport const getMeetingCount = (state) => {\n   return state.length || 0;\n}\n","import { actionTypes } from \"../actions/actionTypes\";\nimport { updateObject } from \"./reducerUtilities\";\n\nexport const addMeeting = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.CONFIGURE_MEETING_DATE: {\n            return updateObject(state, { meetingDate: action.meetingDate });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default addMeeting;\n","import actionTypes from '../actions/actionTypes'\n\nexport const privs = (state = {}, action) => {\n        switch (action.type) {\n            case actionTypes.LOAD_PRIVS: {\n                return action.data\n            }\n            default:\n                return state\n        }\n}\n\nexport default privs\n\nexport const getPrivs = (state, partId, isAssistant = false) => {\n     if( ! state.hasOwnProperty('privs') ) {\n         console.log(\"Missing priv object\")\n         return []\n     }\n     if( ! state.privs.hasOwnProperty(partId)) {\n        console.log(\"Missing priv[partId] object\", partId, state.privs)\n         return []\n     }\n     const priv = state.privs[partId]\n\n     const what = isAssistant ? 'assistant' : 'assigned'\n     const ids = isAssistant ? 'assistantsById': 'assignedById'\n\n     let byId = priv[ids] || [];\n     let byObject = priv[what]\n\n\n     if ( priv.school_part && isAssistant ) {\n        byId = priv['assignedById']\n        byObject = priv['assigned']\n     }\n\n    const arrayOfObjects = byId.map((value) => ({ id: value, name: byObject[value]}))\n    return arrayOfObjects\n}\n","import actionTypes from '../actions/actionTypes';\nimport { updateObject } from './reducerUtilities';\n\nexport const apiRoot = (state = { baseUrl: '', apiStub: 'api'}, action) => {\n    switch (action.type) {\n        case actionTypes.SET_API_URL:\n            return updateObject(state, { baseUrl: action.baseUrl })\n        default:\n            return state;\n    }\n}\n\nexport default apiRoot\n\nexport const getApiRoot = ( state ) => {\n    return state.baseUrl + state.apiStub\n}\n","import actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"./reducerUtilities\";\n\nexport const addParts = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.HIDE_PART_PICKER: {\n            return updateObject(state, { showPicker: false });\n        }\n        case actionTypes.INSERT_PART: {\n            return updateObject(state, { showPicker: action.showPicker });\n        }\n        case actionTypes.ADD_PART_PICKER: {\n            let showPickerBool = true;\n\n            if (state.indexNumber === action.indexNumber) {\n                showPickerBool = !state.showPicker;\n            }\n            return updateObject(state, {\n                indexNumber: action.indexNumber,\n                showPicker: showPickerBool,\n                insertInMeetingId: action.meetingId\n            });\n        }\n        case actionTypes.ADD_PARTS_OBJECT: {\n            const { partEntities, partsByIdArray } = action;\n            return updateObject(state, {\n                fieldValue: partEntities[partsByIdArray[0]].id,\n                fieldText: partEntities[partsByIdArray[0]].partname\n            });\n        }\n        case actionTypes.UPDATE_FORM: {\n            return updateObject(state, {\n                fieldValue: action.value,\n                fieldText: action.fieldText\n            });\n        }\n        default:\n            return state;\n    }\n};\nexport default addParts;\n\nexport const showPartPicker = (meetingId, state) => {\n    const { addParts } = state;\n    return addParts.showPicker;\n};\n\nexport const getDisplayPartPicker = (meetingId, addParts, schedule) => {\n    const { showPicker, insertInMeetingId } = addParts;\n    const { isPublished } = schedule;\n    return showPicker && insertInMeetingId === meetingId && !isPublished;\n};\n\nexport const compare = (a, b) => {\n    if (a.sort_order < b.sort_order) return -1;\n    if (a.sort_order > b.sort_order) return 1;\n    return 0;\n};\n\nexport const getCurrentPartList = (\n    meetingId,\n    meetings,\n    partsAllIds,\n    partsObjectByIds\n) => {\n    let notInCurrentParts = [];\n    if (meetings.hasOwnProperty(meetingId)) {\n        const currentParts = meetings[meetingId].parts;\n\n        notInCurrentParts = partsAllIds.reduce((accum, current) => {\n            if (!currentParts.includes(current)) {\n                return accum.concat(partsObjectByIds[current]);\n            }\n            return accum;\n        }, []);\n    }\n    //console.log('NICP', notInCurrentParts);\n    return notInCurrentParts.sort(compare);\n};\n","import actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"./reducerUtilities\";\n\nexport const meetingNote = (state = {}, action) => {\n    switch (action.type) {\n        case actionTypes.TOGGLE_MEETING_NOTE: {\n            const { meetingId, add } = action;\n\n            if (add) {\n                return updateObject(state, {\n                    [meetingId]: {\n                        ...state[meetingId],\n                        active: add\n                    }\n                });\n            } else {\n                return Object.keys(state).reduce((accum, current) => {\n                    if (String(current) !== String(meetingId)) {\n                        accum[current] = { ...state[current] };\n                        return accum;\n                    }\n                    return accum;\n                }, {});\n            }\n        }\n        case actionTypes.CANCEL_MEETING_NOTE: {\n            return {};\n        }\n\n        case actionTypes.UPDATE_MEETING_NOTE_ID: {\n            return updateObject(state, {\n                [action.meetingId]: {\n                    ...state[action.meetingId],\n                    meeting_note_id: action.meetingNoteId\n                }\n            });\n        }\n\n        case actionTypes.DELETE_MEETING: {\n\n            const { [action.meetingId]: _, ...newObject } = state;\n            return newObject;\n        }\n\n        case actionTypes.DELETE_MEETING_NOTE_ID: {\n            const { meeting_note_id, ...meetingNote } = state[action.meetingId];\n\n            return updateObject(state, {\n                [action.meetingId]: {\n                    ...meetingNote\n                }\n            });\n        }\n        case actionTypes.ADD_MEETING_NOTE_FROM_CAKE: {\n            return updateObject(state, {\n                [action.meetingId]: {\n                    ...state[action.meetingId],\n                    meeting_note_id: action.meetingNoteId,\n                    meeting_id: action.meetingId,\n                    heading: action.heading,\n                    note: action.note,\n                    active: action.active\n                }\n            });\n        }\n        case actionTypes.CLEAR_MEETINGS: {\n            return {};\n        }\n        case actionTypes.UPDATE_MEETING_NOTE: {\n            return updateObject(state, {\n                [action.meetingId]: {\n                    ...state[action.meetingId],\n                    [action.fieldName]: action.fieldValue,\n                    meeting_id: action.meetingId\n                }\n            });\n        }\n        default:\n            return state;\n    }\n};\n","\nimport actionTypes from '../actions/actionTypes'\n\nexport const shouldUpdate = (state = true , action) => {\n\n    switch (action.type) {\n        case actionTypes.UPDATE_STOP: {\n            return false\n        }\n        case actionTypes.UPDATE_ALLOW: {\n            return true\n        }\n\n        default:\n            return state\n    }\n}\n\n\n","import actionTypes from \"../actions/actionTypes\";\nimport moment from \"moment\";\n\nexport const schedules = (state = [], action) => {\n    switch (action.type) {\n        case actionTypes.LOAD_SCHEDULES: {\n            return action.data;\n        }\n        default:\n            return state;\n    }\n};\nexport default schedules\n\nexport const getSchedulesList = state => {\n    if (!state.schedules) return;\n    let formattedList = state.schedules.map(x => {\n        return {\n            id: x.id,\n            month_year: moment(x.start_date).format(\"MMMM YYYY\")\n        };\n    });\n    return formattedList;\n};\n\nexport const getIsScheduleSaveModalVisible = (state) => state.isModalVisible\n","import actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"./reducerUtilities\";\n\nexport const alertMessage = (\n    state = {\n        show: false,\n        color: \"primary\",\n        message: \"Default alert message\"\n    },\n    action\n) => {\n    switch (action.type) {\n        case actionTypes.ADD_MESSAGE: {\n            return updateObject(state, {\n                message: action.message,\n                color: action.color\n            });\n        }\n        case actionTypes.HIDE_ALERT: {\n            return updateObject(state, {\n                show: false\n            });\n        }\n        case actionTypes.SHOW_ALERT: {\n            return updateObject(state, {\n                show: true\n            });\n        }\n        default:\n            return state;\n    }\n};\n","\nimport actionTypes from '../actions/actionTypes'\nimport { updateObject } from \"./reducerUtilities\";\n\nexport const meetingIdMap = (state = {}, action) => {\n    switch(action.type){\n        case actionTypes.ADD_MEETING_ID_MAP: {\n            return updateObject(state, {[action.meetingIdLocal]: action.meetingIdCake})\n        }\n        case actionTypes.CLEAR_MEETINGS: {\n            return {}\n        }\n        case actionTypes.REMOVE_MEETING_ID_MAP: {\n            const { [action.meetingIdLocal]: _, ...copyOfState } = state\n            return copyOfState;\n        }\n        default:\n            return state\n    }\n\n}\n\n","import { combineReducers } from 'redux'\nimport { loadedSchedule } from \"./loadedSchedule\";\nimport meetings, * as fromMeetingsReducer from \"./meetingsReducer\";\nimport fetchReducer, * as fromFetchReducer from \"./fetchReducer\";\nimport partsObjectByIds, * as fromPartsObjectByIds from \"./partsObjectByIds\";\nimport meetingPartsById, * as fromMeetingPartsById from \"./meetingPartsById\";\nimport schedule,  * as fromScheduleReducer from \"./schedule\";\nimport { partsAllIds } from \"./partsAllIds\";\nimport  meetingsById, * as fromMeetingsById from \"./meetingsById\";\nimport addMeeting from \"./addMeeting\";\nimport  privs, * as fromPrivsReducer from \"./privsReducer\";\nimport apiRoot, * as fromApiRoot from \"./apiRoot\";\nimport addParts, * as fromAddPartReducer from \"./addPartReducer\";\nimport { meetingNote } from \"./meetingNote\";\nimport { shouldUpdate } from \"./shouldUpdateReducer\";\nimport  schedules, * as fromSchedulesReducer from \"./schedulesReducer\";\nimport { alertMessage } from \"./alertReducer\";\nimport { meetingIdMap } from \"./meetingIdMapReducer\";\nimport { connectRouter } from 'connected-react-router';\n\nexport const createRouteReducer = history =>\n    combineReducers({\n        router: connectRouter(history),\n        addMeeting,\n        addParts,\n        alertMessage,\n        apiRoot,\n        fetchReducer,\n        loadedSchedule,\n        meetingIdMap,\n        meetingNote,\n        meetingPartsById,\n        meetings,\n        meetingsById,\n        partsAllIds,\n        partsObjectByIds,\n        privs,\n        schedule,\n        schedules,\n        shouldUpdate\n });\n\n\n\nexport const getApiRoot = state => fromApiRoot.getApiRoot(state.apiRoot);\n\nexport const getCurrentPartList = (meetingId, state) => {\n    const { meetings, partsAllIds, partsObjectByIds } = state;\n    return fromAddPartReducer.getCurrentPartList(\n        meetingId,\n        meetings,\n        partsAllIds,\n        partsObjectByIds\n    );\n};\n\nexport const getMeetingIdSortedByDate = state =>\n    fromMeetingsReducer.getMeetingIdSortedByDate(state.meetings);\n\nexport const getCoVisitParts = state =>\n    fromPartsObjectByIds.getCoVisitParts(state.partsObjectByIds);\n\nexport const getNotCoVisitParts = (meetingId, state) => {\n    const { meetingPartsById } = state;\n    return fromMeetingPartsById.getNotCoVisitParts(meetingId, meetingPartsById);\n};\n\nexport const getNonCoVisitParts = state => {\n    return fromPartsObjectByIds.getNonCoVisitParts(state.partsObjectByIds);\n};\n\nexport const getAssignedId = (meetingId, partId, state) =>\n    fromMeetingPartsById.getAssignedId(\n        meetingId,\n        partId,\n        state.meetingPartsById\n    );\n\nexport const getMeetingPart = (meetingId, partId, state) =>\n    fromMeetingPartsById.getMeetingPart(\n        meetingId,\n        partId,\n        state.meetingPartsById\n    );\nexport const getIsFetching = state =>\n    fromFetchReducer.getIsFetching(state.fetchReducer);\n\nexport const getMeetingParts = (meetingId, state) => {\n    const { meetings, meetingPartsById } = state;\n    return fromMeetingsReducer.getMeetingParts(\n        meetingId,\n        meetings,\n        meetingPartsById\n    );\n};\n\nexport const getMeetings = (state) => {\n    const { meetings, meetingsById } = state;\n    return fromMeetingsReducer.getMeetings(meetings, meetingsById)\n}\n\nexport const getFormattedMeetingForSendingToApi = (state) => {\n    const { meetings, schedule } = state;\n    return fromMeetingsReducer.getFormattedMeetingForSendingToApi(meetings, schedule)\n}\n\nexport const getIsScheduleSaveModalVisible = (state) =>\n    fromSchedulesReducer.getIsScheduleSaveModalVisible(state.schedule)\n\n\nexport const getDisplayPartPicker = (meetingId, state ) => {\n    const { addParts, schedule } = state;\n    return fromAddPartReducer.getDisplayPartPicker(meetingId, addParts, schedule)\n}\n\nexport const getScheduleDates = (state) =>\n    fromScheduleReducer.getScheduleDates(state.schedule)\n\nexport const getMeetingCount = (state) =>\n    fromMeetingsById.getMeetingCount(state.meetingsById)\n\nexport const getPrivs = (state, partId,  isAssistant) => {\n    const stateSlice = state.privs || {}\n    return fromPrivsReducer.getPrivs(stateSlice, partId,  isAssistant)\n}\n\n","import moment from \"moment\";\nimport { normalize, schema } from \"normalizr\";\nimport { batchActions } from \"redux-batched-actions\";\nimport utils from \"../../../Utility/utilities\";\nimport * as actions from \"../actionCreators\";\nimport { push } from \"connected-react-router\";\nimport {\n    getCoVisitParts,\n    getNotCoVisitParts,\n    getApiRoot,\n    getCurrentPartList,\n    getMeetingIdSortedByDate,\n    getNonCoVisitParts,\n    getAssignedId\n} from \"../../reducers/rootReducer\";\n\nconst replaceTokenFn = (stringWithToken, replaceToken, replaceValue) => {\n    return stringWithToken.replace(replaceToken, replaceValue);\n};\nconst getPartIndexFromSortedPartList = (partToAdd, partList, partsByIds) => {\n    let newParts = partList.concat(partToAdd);\n    let sortedNewParts = newParts.sort((a, b) => {\n        return partsByIds[a].sort_order - partsByIds[b].sort_order;\n    });\n\n    return sortedNewParts.indexOf(partToAdd);\n};\n\nexport const updateMeetingToCake = (dispatch, meetingId, newObject, url) => {\n    const postData = {\n        id: meetingId,\n        ...newObject\n    };\n\n    return utils\n        .fetchFromCake(dispatch)(url, \"PUT\", postData)\n        .then(data => {\n            if (data.success) {\n                dispatch(actions.fetchSuccess());\n            }\n        });\n};\n\nexport const addCoPartThunk = (meetingId, checkBoxValue) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const { meetings, partsObjectByIds, meetingPartsById } = state;\n        const API_URL = getApiRoot(state);\n\n        let coParts = getCoVisitParts(state);\n        let currentNotCoParts = getNotCoVisitParts(meetingId, state);\n        let nonCoVisitParts = getNonCoVisitParts(state);\n        //console.warn(coParts, currentNotCoParts, nonCoVisitParts);\n\n        let meeting = meetings[meetingId];\n        let parts = meeting.parts.slice();\n\n        let multiAction = [actions.clickCoVisit(meetingId, checkBoxValue)];\n\n        if (utils.isEmptyObject(meetingPartsById)) {\n            console.log(\"no meetings so returning from addCoPartThunk\");\n            return;\n        }\n\n        if (checkBoxValue) {\n            // its a coVisit\n            if (!parts.some(r => coParts.includes(r))) {\n                coParts.forEach(coP => {\n                    if (!meetingPartsById[meetingId][coP]) {\n                        let newPart = Object.assign({}, partsObjectByIds[coP]);\n                        multiAction = multiAction.concat(\n                            actions.addCoPart(meetingId, coP, newPart)\n                        );\n                    }\n\n                    multiAction = multiAction.concat(\n                        actions.insertCoPart(\n                            getPartIndexFromSortedPartList(\n                                coP,\n                                parts,\n                                partsObjectByIds\n                            ),\n                            meetingId,\n                            coP\n                        )\n                    );\n\n                    multiAction = multiAction.concat(\n                        addMeetingPartToCake(\n                            formatInsertPart(\n                                meetingId,\n                                coP,\n                                partsObjectByIds,\n                                meetings\n                            )\n                        )\n                    );\n                });\n                currentNotCoParts.forEach(x => {\n                    multiAction = multiAction.concat(\n                        actions.deleteCoParts(meetingId, x)\n                    );\n                    multiAction = multiAction.concat(\n                        deletePartUpdateTimesThunk(meetingId, x, 0) // 0 not needed\n                    );\n                });\n            }\n        } else {\n            // not a co visit\n            coParts.forEach(x => {\n                multiAction = multiAction.concat(\n                    actions.deleteCoParts(meetingId, x)\n                );\n                multiAction = multiAction.concat(\n                    deletePartUpdateTimesThunk(meetingId, x, 0) // 0 not needed\n                );\n            });\n\n            nonCoVisitParts.forEach(x => {\n                if (!meetingPartsById[meetingId][x]) {\n                    let newPart = Object.assign({}, partsObjectByIds[x]);\n                    multiAction = multiAction.concat(\n                        actions.addCoPart(meetingId, x, newPart)\n                    );\n                    multiAction = multiAction.concat(\n                        addMeetingPartToCake(\n                            formatInsertPart(\n                                meetingId,\n                                x,\n                                partsObjectByIds,\n                                meetings\n                            )\n                        )\n                    );\n                }\n\n                let index = getPartIndexFromSortedPartList(\n                    x,\n                    parts,\n                    partsObjectByIds\n                );\n\n                multiAction = multiAction.concat(\n                    actions.insertCoPart(index, meetingId, x)\n                );\n            });\n        }\n        dispatch(batchActions(multiAction));\n\n        dispatch(updateAllStartTimesThunk(meetingId));\n        updateMeetingToCake(\n            dispatch,\n            meeting.meeting_id,\n            { co_visit: checkBoxValue },\n            `${API_URL}/meetings/edit/${meeting.meeting_id}`\n        );\n    };\n};\n\nexport const addPartPickerThunk = meetingId => {\n    return (dispatch, getState) => {\n        const cpl = getCurrentPartList(meetingId, getState());\n\n        const firstPart = cpl.shift();\n\n        dispatch(actions.updateForm(\"\", firstPart.id, firstPart.partname));\n        dispatch(actions.addPartPicker(meetingId));\n    };\n};\n\nexport const setScheduleStartDateThunk = startDateMoment => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const { schedule } = state;\n        const { scheduleId } = schedule;\n\n        const dateFormatted = startDateMoment.format();\n\n        dispatch(actions.setScheduleStartDate(dateFormatted));\n\n        if (!scheduleId) {\n            var futureMonthEnd = moment(startDateMoment).endOf(\"month\");\n            dispatch(actions.setScheduleEndDate(futureMonthEnd.format()));\n        }\n\n        dispatch(actions.setMeetingDate(dateFormatted));\n    };\n};\nexport const deletePartUpdateTimesThunk = (\n    meeting_id,\n    part_id,\n    indexNumber\n) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const API_URL = getApiRoot(state);\n        const assignedId = getAssignedId(meeting_id, part_id, state);\n        dispatch(actions.deletePart(part_id, meeting_id, indexNumber));\n        dispatch(updateAllStartTimesThunk(meeting_id));\n        if (assignedId) {\n            return utils\n                .fetchFromCake(dispatch)(\n                    `${API_URL}/assigned/delete/${assignedId}`,\n                    \"POST\"\n                )\n                .then(data => {\n                    console.log(\"deleted cake part\", assignedId);\n                    dispatch(actions.fetchSuccess());\n                    return data;\n                });\n        }\n    };\n};\n\nexport const addPartsObjectForSingleMeetingThunk = meetingId => {\n    return (dispatch, getState) => {\n        const { partsAllIds, partsObjectByIds } = getState();\n\n        // yah first working filter & map using reduce\n        const filteredParts = partsAllIds.reduce(\n            (accum, current) => {\n                if (\n                    !partsObjectByIds[current].school_part &&\n                    !partsObjectByIds[current].co_visit\n                ) {\n                    return {\n                        partIds: accum.partIds.concat(current),\n                        partObjects: {\n                            ...accum.partObjects,\n                            [current]: partsObjectByIds[current]\n                        }\n                    };\n                }\n                return accum;\n            },\n            { partIds: [], partObjects: {} }\n        );\n\n        dispatch(\n            batchActions([\n                actions.addToMeetingPartsById(\n                    meetingId,\n                    filteredParts.partObjects,\n                    filteredParts.partIds\n                ),\n                actions.addSinglePartsObject(meetingId, filteredParts.partIds),\n                updateAllStartTimesThunk(meetingId)\n            ])\n        );\n    };\n};\n\nconst meetingExists = (meetings, meetingDate) => {\n    //console.log(meetings);\n    const meetingDateMoment = moment(meetingDate, \"DD/MM/YYYY\").format(\n        \"YYYY-MM-DD\"\n    );\n    /* const meetingDateSeen = Object.keys(meetings)\n        .map(x => {\n            return moment(meetings[x].date, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\");\n        })\n        .includes(meetingDateMoment); */\n\n    const meetingDateSeen = Object.keys(meetings).reduce((accum, current) => {\n        if (\n            moment(meetings[current].date, \"DD/MM/YYYY\").format(\n                \"YYYY-MM-DD\"\n            ) === meetingDateMoment\n        ) {\n            return true;\n        } else {\n            return accum;\n        }\n    }, false);\n    return meetingDateSeen;\n};\n\nexport const showHideAlertTimed = dispatch => (\n    message,\n    color = \"danger\",\n    time = 4000\n) => {\n    dispatch(actions.addMessage(message, color));\n    dispatch(actions.showAlert());\n    setTimeout(() => {\n        dispatch(actions.hideAlert());\n    }, time);\n};\n\nexport const addMeetingSortedThunk = (meetingDate, meetingID) => {\n    return (dispatch, getState) => {\n        const { schedule, meetings } = getState();\n\n        if (schedule.scheduleId === \"\") {\n            showHideAlertTimed(dispatch)(\n                \"Cannot add meetings until a schedule is created or selected!\"\n            );\n            return;\n        }\n\n        if (schedule.isPublished) {\n            showHideAlertTimed(dispatch)(\n                \"You cannot add a meeting to a published schedule. Please unpublish to add a meeting\"\n            );\n            return;\n        }\n        if (meetingExists(meetings, meetingDate)) {\n            showHideAlertTimed(dispatch)(\n                `Meeting date ${meetingDate} already added!`,\n                \"danger\"\n            );\n            return;\n        }\n        dispatch(actions.addMeeting(meetingDate, meetingID));\n\n        dispatch(addMeetingToCakeThunk(meetingDate, meetingID));\n\n        dispatch(addPartsObjectForSingleMeetingThunk(meetingID));\n\n        const sortedByDateMeetingIDs = getMeetingIdSortedByDate(getState());\n\n        dispatch(actions.sortedMeetings(sortedByDateMeetingIDs));\n    };\n};\n\nexport const deleteMeetingFromCake = meetingId => {\n    return (dispatch, getState) => {\n        const { meetingIdMap, ...state } = getState();\n\n        const API_URL = getApiRoot(state);\n\n        const cakeId = meetingIdMap[meetingId] || meetingId;\n\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/meetings/delete/${cakeId}`,\n                \"POST\"\n            )\n            .then(meeting => {\n                dispatch(actions.removeMeetingIdMap(meetingId));\n                dispatch(actions.fetchSuccess());\n\n                if (meeting.success) {\n                    // console.log(\"Success DeleteMeetingFromCake\", meeting);\n                }\n                return meeting;\n            })\n            .catch(e => {\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\n\nexport const addMeetingToCakeThunk = (\n    meetingDate,\n    meetingIdLocal,\n    coVisit = false,\n    chairmanId = null,\n    auxCounselorId = null\n) => {\n    return (dispatch, getState) => {\n        const { schedule, ...state } = getState();\n        const { scheduleId } = schedule;\n        const API_URL = getApiRoot(state);\n\n        let postObject = {\n            date: moment(meetingDate, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\"),\n            schedule_id: scheduleId,\n            co_visit: coVisit,\n            person_id: chairmanId,\n            auxiliary_counselor_id: auxCounselorId\n        };\n\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/meetings/add`,\n                \"POST\",\n                postObject\n            )\n            .then(meeting => {\n                dispatch(actions.fetchSuccess());\n                //console.log('A2C', meeting)\n                if (meeting.success) {\n                    let meetingId = meeting.meeting.id;\n                    dispatch(\n                        actions.addMeetingIdMap(meetingIdLocal, meetingId)\n                    );\n                    dispatch(loadMeetingPartsToCake(meetingIdLocal, meetingId));\n                } else {\n                    showHideAlertTimed(dispatch)(\n                        Object.values(utils.flattenObject(meeting.error)).join(\n                            \", \"\n                        ),\n                        \"danger\"\n                    );\n                }\n                //dispatch(actions.loadSchedules(parts));\n                return meeting;\n            })\n            .catch(e => {\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\nexport const updateAllStartTimesThunk = meetingId => {\n    return (dispatch, getState) => {\n        // meetings, meetingId, partIds, partEntities, partId\n        const { meetings, meetingPartsById } = getState();\n\n        let totalMinutes = 0;\n        let updateObject = {};\n        let updateObjectArray = [];\n        const meetingStartTime = meetings[meetingId].startTime;\n        const meetingStartMoment = moment(meetingStartTime, \"h:mmA\");\n        const parts = meetings[meetingId].parts;\n\n        parts.forEach((partId, partIndex) => {\n            if (partIndex === 0) {\n                totalMinutes = 0;\n                updateObject = {\n                    meetingId: meetingId,\n                    partId: partId,\n                    fieldName: \"start_time\",\n                    fieldValue: meetingStartMoment.format()\n                };\n\n                updateObjectArray = updateObjectArray.concat(updateObject);\n            }\n\n            let part = meetingPartsById[meetingId][partId];\n\n            let { minutes, counsel_mins } = part;\n\n            if (partIndex !== 0) {\n                let newMeetingStartMoment = meetingStartMoment.clone();\n                newMeetingStartMoment.add(totalMinutes, \"m\");\n                updateObject = {\n                    meetingId: meetingId,\n                    partId: partId,\n                    fieldName: \"start_time\",\n                    fieldValue: newMeetingStartMoment.format()\n                };\n                updateObjectArray = updateObjectArray.concat(updateObject);\n            }\n\n            totalMinutes +=\n                parseInt(minutes || 0) + parseInt(counsel_mins || 0);\n        });\n        dispatch(actions.bulkUpdateMeetingParts(updateObjectArray));\n    };\n};\n\nexport const updateMeetingPartThunk = (\n    meetingId,\n    partId,\n    fieldName,\n    fieldValue,\n    isSong = false\n) => {\n    return (dispatch, getState) => {\n        const { partsObjectByIds } = getState();\n\n        if (isSong) {\n            const partObject = partsObjectByIds[partId];\n            const partName = partObject[\"partname\"];\n            const replaceToken = partObject[\"replace_token\"];\n\n            const newPartName = replaceTokenFn(\n                partName,\n                replaceToken,\n                fieldValue\n            );\n\n            dispatch(\n                batchActions([\n                    actions.updateMeetingPart({\n                        meetingId,\n                        partId,\n                        fieldName,\n                        fieldValue\n                    }),\n                    actions.updateMeetingPart({\n                        meetingId,\n                        partId,\n                        fieldName: \"partname\",\n                        fieldValue: newPartName\n                    })\n                ])\n            );\n        } else {\n            dispatch(\n                actions.updateMeetingPart({\n                    meetingId,\n                    partId,\n                    fieldName,\n                    fieldValue\n                })\n            );\n        }\n\n        if (fieldName === \"minutes\" || fieldName === \"counsel_mins\") {\n            dispatch(updateAllStartTimesThunk(meetingId));\n        }\n    };\n};\n\nexport const resetValuesThunk = (meetingId, partId, indexNumber) => {\n    return (dispatch, getState) => {\n        const { partsObjectByIds } = getState();\n        dispatch(\n            actions.resetValues(\n                meetingId,\n                partId,\n                indexNumber,\n                partsObjectByIds[partId]\n            )\n        );\n        dispatch(updateAllStartTimesThunk(meetingId));\n    };\n};\n\nexport const insertPartThunk = meetingId => {\n    return (dispatch, getState) => {\n        const { meetings, partsObjectByIds, addParts } = getState();\n\n        const { fieldValue: partId } = addParts;\n\n        const parts = meetings[meetingId].parts;\n\n        const indexNumber = getPartIndexFromSortedPartList(\n            partId,\n            parts,\n            partsObjectByIds\n        );\n        dispatch(\n            batchActions([\n                actions.insertPart(\n                    indexNumber,\n                    meetingId,\n                    partId,\n                    partsObjectByIds\n                ),\n                updateAllStartTimesThunk(addParts.insertInMeetingId)\n            ])\n        );\n        dispatch(\n            addMeetingPartToCake(\n                formatInsertPart(meetingId, partId, partsObjectByIds, meetings)\n            )\n        );\n    };\n};\n\nexport const formatInsertPart = (\n    localMeetingId,\n    partId,\n    partsObjectByIds,\n    meetings\n) => {\n    const meetingId = meetings[localMeetingId].meeting_id;\n    const meetingPart = [partsObjectByIds[partId]];\n\n    const formattedPart = formatAssignmentsForPostToCake(\n        meetingPart,\n        meetingId\n    );\n\n    return formattedPart;\n};\n\nexport const deleteMeetingThunk = meetingId => {\n    return dispatch => {\n        dispatch(\n            batchActions([\n                actions.deleteMeeting(meetingId),\n                actions.removeMeetingParts(meetingId),\n                deleteMeetingFromCake(meetingId),\n                actions.deleteMeetingObject(meetingId)\n            ])\n        );\n    };\n};\n\nexport const updateTimeThunk = (meetingId, fieldValue) => {\n    return dispatch => {\n        dispatch(actions.updateTime(meetingId, fieldValue));\n        dispatch(updateAllStartTimesThunk(meetingId));\n    };\n};\n\nexport const getPartsThunk = () => {\n    return (dispatch, getState) => {\n        const API_URL = getApiRoot(getState());\n\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/parts/getParts?sort=sort_order&direction=asc&limit=100`\n            )\n            .then(parts => {\n                const part = new schema.Entity(\"parts\");\n                const mySchema = { parts: [part] };\n                const normalizedData = normalize(parts, mySchema);\n                dispatch(actions.fetchSuccess());\n                dispatch(actions.addPartsObject(normalizedData));\n            })\n            .catch(e => {\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\n\nconst formatAssigned = (assignedArray, meetingId) => {\n    let formattedAssigned = {};\n    let orderOfAssigned = [];\n    orderOfAssigned = assignedArray.map(obj => {\n        let objectCopied = JSON.parse(JSON.stringify(obj));\n        const part = { ...objectCopied.part };\n        const {\n            partname: storedPartname,\n            minutes: storedMinutes,\n            ...newObject\n        } = part;\n\n        objectCopied.assigned_id = objectCopied.id;\n        delete objectCopied.part;\n        delete newObject.section;\n        let songNumber = null;\n        const partTitle = objectCopied.part_title;\n        const digitRegEx = /\\d+/;\n        const matches = partTitle.match(digitRegEx);\n\n        if (matches !== null) {\n            songNumber = matches[0];\n        }\n\n        let combinedObject = {\n            ...objectCopied,\n            ...newObject,\n            partname: objectCopied.part_title,\n            minutes: objectCopied.minutes,\n            songNumber: songNumber\n        };\n\n        formattedAssigned[obj.part_id] = combinedObject;\n        return obj.part_id;\n    });\n    const returnValue = {\n        assignedObjectById: { [meetingId]: formattedAssigned },\n        assignedArrayById: orderOfAssigned\n    };\n\n    return returnValue;\n};\n\nexport const getScheduleThunk = scheduleId => {\n    return (dispatch, getState) => {\n        dispatch(actions.clearMeetings());\n        const { router, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        const pathname = router.location.pathname;\n        if (!scheduleId) {\n            dispatch(actions.setScheduleId(\"\"));\n            dispatch(push(pathname));\n            return;\n        }\n        dispatch(push(pathname + `?id=${scheduleId}`));\n        dispatch(actions.updateStop());\n\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/assigned/loadSchedule/${scheduleId}`\n            )\n            .then(schedule => {\n                const {\n                    start_date,\n                    end_date,\n                    published: isPublished\n                } = schedule.schedule;\n\n                let multiActions = [\n                    actions.setScheduleData({\n                        start_date,\n                        end_date,\n                        scheduleId,\n                        isPublished\n                    }),\n                    actions.setMeetingDate(start_date)\n                ];\n                let assigned = {};\n                const meetingsArray = schedule.meetings.map((meeting, idx) => {\n                    //console.log(meeting);\n                    const formattedDate = moment(meeting.date).format(\n                        \"D/M/YYYY\"\n                    );\n                    const {\n                        id: meetingId,\n                        assigned: meetingAssigned,\n                        auxiliary_counselor_id: auxCounselorId,\n                        person_id: chairmanId,\n                        co_visit: coVisit\n                    } = meeting;\n                    let startTime = null;\n                    // console.log(\"MEETING\", meeting);\n                    if (meetingAssigned.length > 0) {\n                        startTime = moment\n                            .utc(meetingAssigned[0].start_time)\n                            .format(\"h:mm A\");\n                    }\n\n                    multiActions = multiActions.concat(\n                        actions.addMeeting(\n                            formattedDate,\n                            meetingId,\n                            chairmanId,\n                            auxCounselorId,\n                            coVisit,\n                            startTime\n                        )\n                    );\n\n                    if (meetingAssigned.length > 0) {\n                        assigned = formatAssigned(meetingAssigned, meetingId);\n\n                        //console.log(assigned);\n                        multiActions = multiActions.concat(\n                            actions.populateMeetingPartsByIdFromCake({\n                                ...assigned.assignedObjectById\n                            })\n                        );\n                        multiActions = multiActions.concat(\n                            actions.addSinglePartsObject(meetingId, [\n                                ...assigned.assignedArrayById\n                            ])\n                        );\n                    }\n                    if (meeting.meeting_note !== null) {\n                        const { meeting_note: meetingNote } = meeting;\n                        const {\n                            heading,\n                            note,\n                            id: meetingNoteId\n                        } = meetingNote;\n                        multiActions = multiActions.concat(\n                            actions.addMeetingNoteFromCake(\n                                meetingId,\n                                meetingNoteId,\n                                heading,\n                                note\n                            )\n                        );\n                    }\n\n                    assigned = {};\n                    return meetingId;\n                });\n\n                multiActions = multiActions.concat(\n                    actions.loadMeetingsById(meetingsArray)\n                );\n\n                let updateTimes = meetingsArray.map(meetingId => {\n                    return updateAllStartTimesThunk(meetingId);\n                });\n\n                multiActions = multiActions.concat(updateTimes);\n                multiActions = multiActions.concat(\n                    actions.loadSchedule(schedule)\n                );\n                multiActions = multiActions.concat(actions.fetchSuccess());\n                multiActions = multiActions.concat(actions.updateAllow());\n\n                dispatch(batchActions(multiActions));\n            })\n            .catch(e => {\n                console.log(\"fetchFail\", e);\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\n\nexport const getPrivsThunk = () => {\n    return (dispatch, getState) => {\n        const API_URL = getApiRoot(getState());\n\n        return utils\n            .fetchFromCake(dispatch)(`${API_URL}/assigned/getPrivs`)\n            .then(parts => {\n                //const part = new schema.Entity(\"parts\");\n                //const mySchema = { parts: [part] };\n                //const normalizedData = normalize(parts, mySchema);\n\n                dispatch(actions.fetchSuccess());\n                dispatch(actions.loadPrivs(parts));\n            })\n            .catch(e => {\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\n\nexport const getSchedulesThunk = () => {\n    return (dispatch, getState) => {\n        const API_URL = getApiRoot(getState());\n\n        return utils\n            .fetchFromCake(dispatch)(`${API_URL}/schedules/list`)\n            .then(parts => {\n                dispatch(actions.fetchSuccess());\n                dispatch(actions.loadSchedules(parts));\n            })\n            .catch(e => {\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\n\nconst dateRangesOverlap = (schedule, schedules) => {\n    const startDateMoment = moment(schedule.start_date).valueOf();\n    const endDateMoment = moment(schedule.end_date).valueOf();\n    //(StartDate1 <= EndDate2) and (StartDate2 <= EndDate1)\n    const scheduleOverlaps = schedules.some((sch, idx, schedules) => {\n        const startDate2Moment = moment(sch.start_date).valueOf();\n        const endDate2Moment = moment(sch.end_date).valueOf();\n\n        return (\n            startDateMoment <= endDate2Moment &&\n            startDate2Moment <= endDateMoment\n        );\n    });\n    //console.log(\"so\", scheduleOverlaps);\n    return scheduleOverlaps;\n};\n\nexport const addScheduleThunk = () => {\n    return (dispatch, getState) => {\n        dispatch(actions.hideAlert());\n        const { schedules, schedule, ...state } = getState();\n        const API_URL = getApiRoot(state);\n\n        if (dateRangesOverlap(schedule, schedules)) {\n            showHideAlertTimed(dispatch)(\n                \"Dates cannot overlap with other schedules\",\n                \"danger\"\n            );\n            return;\n        }\n        const month = moment(schedule.start_date).format(\"MMMM\");\n        const format = \"DD/MM/YYYY\";\n        const startDate = moment(schedule.start_date).format(format);\n        const endDate = moment(schedule.end_date).format(format);\n        let postObject = {\n            comment: `Schedule for month of ${month}`,\n            start_date: startDate,\n            end_date: endDate,\n            month: month\n        };\n\n        dispatch(actions.clearMeetings());\n\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/schedules/add`,\n                \"POST\",\n                postObject\n            )\n            .then(schedule => {\n                dispatch(actions.fetchSuccess());\n                // console.log(schedule);\n                if (schedule.success) {\n                    dispatch(getSchedulesThunk());\n                    dispatch(actions.setScheduleId(schedule.schedule.id));\n                }\n                //dispatch(actions.loadSchedules(parts));\n            })\n            .catch(e => {\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\n\nexport const deleteScheduleThunk = () => {\n    return (dispatch, getState) => {\n        dispatch(actions.hideAlert());\n        const { schedule, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        if (!(schedule && schedule.scheduleId !== \"\")) {\n            console.log(\"no schedule to delete\");\n            showHideAlertTimed(dispatch)(\"Please select a schedule to delete\");\n            return;\n        }\n        const scheduleId = schedule.scheduleId;\n\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/schedules/delete/${scheduleId}`,\n                \"POST\"\n            )\n            .then(schedule => {\n                dispatch(actions.fetchSuccess());\n\n                if (schedule.success) {\n                    dispatch(getSchedulesThunk());\n                    dispatch(actions.clearMeetings());\n                    dispatch(actions.setScheduleId(\"\"));\n                }\n                //dispatch(actions.loadSchedules(parts));\n            })\n            .catch(e => {\n                dispatch(actions.fetchFail(e));\n            });\n    };\n};\n\nexport const resortMeetingsAfterDateChange = (meetingId, meetingDate) => {\n    return (dispatch, getState) => {\n        const { meetings, schedule, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        const cakeMeetingId = meetings[meetingId].meeting_id;\n        const meetingDates = Object.keys(meetings).map(mkey => {\n            return moment(meetings[mkey].date, \"D/M/YYYY\").format(\"DD/MM/YYYY\");\n        });\n        if (meetingDates.includes(meetingDate)) {\n            showHideAlertTimed(dispatch)(\n                \"Meeting date already exists please choose another\"\n            );\n            return;\n        }\n        dispatch(actions.setMeetingDateByMeetingId(meetingId, meetingDate));\n        const { scheduleId } = schedule;\n        const postData = {\n            schedule_id: scheduleId,\n            date: moment(meetingDate, \"DD/MM/YYYY\").format(\"YYYY-MM-DD\")\n        };\n        const url = `${API_URL}/meetings/edit/${cakeMeetingId}`;\n\n        updateMeetingToCake(dispatch, cakeMeetingId, postData, url);\n        const sortedByDateMeetingIDs = getMeetingIdSortedByDate(getState());\n        dispatch(actions.sortedMeetings(sortedByDateMeetingIDs));\n    };\n};\n\nexport const auxCounselorChange = (meetingId, valueName, value) => {\n    return (dispatch, getState) => {\n        const { meetings, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        dispatch(actions.setMeetingValue(meetingId, valueName, value));\n        const cakeMeetingId = meetings[meetingId].meeting_id;\n        const newObject = {\n            [valueName]: value\n        };\n        const url = `${API_URL}/meetings/edit/${cakeMeetingId}`;\n        updateMeetingToCake(dispatch, cakeMeetingId, newObject, url);\n    };\n};\nexport const chairmanChange = (meetingId, fieldName, chairmanId) => {\n    return (dispatch, getState) => {\n        const { meetingPartsById, meetings, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        const meeting = meetingPartsById[meetingId];\n\n        const meetingPartsToAddChairmanTo = Object.keys(meeting).reduce(\n            (accum, current) => {\n                if (meeting[current].chairman_part === true) {\n                    return accum.concat(\n                        actions.updateMeetingPart({\n                            meetingId,\n                            partId: current,\n                            fieldName,\n                            fieldValue: chairmanId\n                        })\n                    );\n                }\n                return accum;\n            },\n            []\n        );\n\n        const batchAction = [\n            actions.setMeetingValue(meetingId, fieldName, chairmanId)\n        ].concat(meetingPartsToAddChairmanTo);\n\n        dispatch(batchActions(batchAction));\n        const cakeMeetingId = meetings[meetingId].meeting_id;\n        updateMeetingToCake(\n            dispatch,\n            cakeMeetingId,\n            { person_id: chairmanId },\n            `${API_URL}/meetings/edit/${cakeMeetingId}`\n        );\n    };\n};\n\nexport const parseTime = dateString => {\n    const match = dateString.match(/\\d{2}:\\d{2}:\\d{2}/)[0];\n    const converted = moment(match, \"HH:mm:ss\");\n    return converted.isValid() ? converted.format(\"h:mm A\") : null;\n};\n\nexport const formatAssignmentsForPostToCake = (meetingParts, cakeMeetingId) => {\n    const copiedParts = JSON.parse(JSON.stringify(meetingParts));\n\n    const assignedParts = Object.keys(copiedParts).map(obj => {\n        const { id: partId, active, assigned_id, ...newObject } = copiedParts[\n            obj\n        ];\n        //console.log('formatAssignmentsForPostToCake', newObject[\"start_time\"])\n        const assignedExists = assigned_id ? { id: assigned_id } : null;\n        return {\n            ...newObject,\n            ...assignedExists,\n            meeting_id: cakeMeetingId,\n            part_id: partId,\n            start_time: parseTime(newObject[\"start_time\"]),\n            part_title: newObject.partname\n        };\n    });\n    //console.log(assignedParts)\n    return assignedParts;\n};\n/**\n *\n * @param {*} meetingId\n * @param {*} meetings\n * @param {*} meetingPartsById\n */\nexport const getActiveMeetingParts = (\n    meetingId,\n    meetings,\n    meetingPartsById\n) => {\n    const meetingPartIds = meetings[meetingId].parts;\n    const meetingParts = meetingPartsById[meetingId];\n    let meetingPartObject = {};\n\n    meetingPartIds.forEach(id => {\n        meetingPartObject[id] = { ...meetingParts[id] };\n    });\n    return meetingPartObject;\n};\nexport const loadMeetingPartsToCake = (meetingId, cakeMeetingId) => {\n    return (dispatch, getState) => {\n        const { meetingPartsById, meetings, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        const meetingParts = getActiveMeetingParts(\n            meetingId,\n            meetings,\n            meetingPartsById\n        );\n\n        const postData = formatAssignmentsForPostToCake(\n            meetingParts,\n            cakeMeetingId\n        );\n\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/assigned/addAssignedParts`,\n                \"POST\",\n                postData\n            )\n            .then(data => {\n                dispatch(actions.fetchSuccess());\n                const responseData = data.result.map(x => {\n                    return {\n                        assigned_id: x.id,\n                        part_id: x.part_id\n                    };\n                });\n                dispatch(\n                    actions.updateMeetingPartAssignedID(meetingId, responseData)\n                );\n                return data;\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n};\n\n/**\n * resolveMeetingId\n * takes cakeMeetingId and resolves the current meetingId\n * @param {*} apiMeetingId\n * @param {*} meetingIdMap\n */\nexport const resolveMeetingId = (apiMeetingId, meetingIdMap) => {\n    const rid = Object.keys(meetingIdMap).filter(ridKey => {\n        return meetingIdMap[ridKey] === apiMeetingId;\n    });\n\n    return rid.length === 0 ? apiMeetingId : rid;\n};\n\nexport const addMeetingPartToCake = postData => {\n    return (dispatch, getState) => {\n        const { meetingIdMap, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        return utils\n            .fetchFromCake(dispatch)(\n                `${API_URL}/assigned/addAssignedParts`,\n                \"POST\",\n                postData\n            )\n            .then(data => {\n                dispatch(actions.fetchSuccess());\n                console.log(postData, data);\n                if (data.success) {\n                    //dispatch(actions)\n                    const resolvedMeetingId = resolveMeetingId(\n                        postData[0].meeting_id,\n                        meetingIdMap\n                    );\n                    const assignedId = data.result[0].id;\n                    const { part_id: partId } = postData[0];\n                    // console.log(resolvedMeetingId,partId, assignedId , postData[0])\n                    dispatch(\n                        actions.insertPartUpdateIDFromCake(\n                            resolvedMeetingId,\n                            partId,\n                            assignedId\n                        )\n                    );\n                }\n                return data;\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n};\n","import * as actions from \"../actionCreators\";\nimport moment from \"moment\";\nimport { parseTime } from \"./asyncActions\";\nimport utils from \"../../../Utility/utilities\";\nimport { getApiRoot } from \"../../reducers/rootReducer\";\n\nexport const formatSchedule = scheduleObject => {\n    const { start_date, end_date, scheduleId } = scheduleObject;\n    const startDate = moment(start_date).format(\"YYYY-MM-DD\");\n    const endDate = moment(end_date).format(\"YYYY-MM-DD\");\n\n    return {\n        id: scheduleId,\n        start_date: startDate,\n        end_date: endDate\n        // comment: comment\n    };\n};\n\nexport const formatMeetings = (meetingObject, scheduleId) => {\n    return Object.keys(meetingObject).map(mo => {\n        const {\n            date,\n            meeting_id,\n            coVisit,\n            person_id,\n            auxiliary_counselor_id\n        } = meetingObject[mo];\n        const formattedDate = moment(date, \"D/M/YYYY\").format(\"YYYY-MM-DD\");\n\n        return {\n            id: meeting_id,\n            date: formattedDate,\n            co_visit: coVisit,\n            person_id: person_id,\n            schedule_id: scheduleId,\n            auxiliary_counselor_id: auxiliary_counselor_id\n        };\n    });\n};\nexport const formatAssignedParts = (meetings, meetingPartsById) => {\n    const meetingParts = Object.keys(meetings)\n        .map(mo => {\n            return meetings[mo].parts.map(mpm => {\n                return meetingPartsById[mo][mpm];\n            });\n        })\n        .reduce((accum, current, idx, src) => {\n            return accum.concat(current);\n        })\n        .map(part => {\n            const { id: partId, active, assigned_id, ...newObject } = part;\n            const assignedExists = assigned_id ? { id: assigned_id } : null;\n            return {\n                ...newObject,\n                ...assignedExists,\n                part_id: partId,\n                start_time: parseTime(newObject[\"start_time\"]),\n                part_title: newObject.partname\n            };\n        });\n\n    /*\n\n  const { id: partId, active, assigned_id, ...newObject }\n const assignedExists = assigned_id ? { id: assigned_id } : null;\n        return {\n            ...newObject,\n            ...assignedExists,\n            meeting_id: cakeMeetingId,\n            part_id: partId,\n            start_time: parseTime(newObject[\"start_time\"]),\n            part_title: newObject.partname\n        };\n        */\n\n    return meetingParts;\n    /*meetingParts.map(mp => {\n        mp.parts.map( pid => {\n            meetings[]\n        })\n    })*/\n};\n\nexport const saveScheduleThunk = () => {\n    return (dispatch, getState) => {\n        const {\n            schedule,\n            meetings,\n            meetingPartsById,\n            meetingNote,\n            meetingIdMap,\n            ...state\n        } = getState();\n\n        const API_URL = getApiRoot(state);\n\n        const formattedSchedule = formatSchedule(schedule);\n\n        dispatch(\n            saveToCake(\n                formattedSchedule,\n                `${API_URL}/schedules/edit/${formattedSchedule.id}`\n            )\n        );\n\n        const formattedMeetings = formatMeetings(meetings, schedule.scheduleId);\n        if (formattedMeetings.length === 0) {\n            console.log(\"no meetings so dont continue\");\n            return;\n        }\n        dispatch(\n            saveToCake(formattedMeetings, `${API_URL}/meetings/saveMeetings`)\n        );\n\n        const formattedAssignedParts = formatAssignedParts(\n            meetings,\n            meetingPartsById\n        );\n        dispatch(\n            saveToCake(\n                formattedAssignedParts,\n                `${API_URL}/assigned/editAssignedParts`\n            )\n        );\n        formatMeetingNotes(meetingNote, meetingIdMap).forEach(mn => {\n            //console.log(\"Inss\", mn);\n            dispatch(saveMeetingNotesToCake(mn, `${API_URL}${mn.url}`));\n        });\n    };\n};\n\nexport const saveToCake = (postData, endpoint, method = \"POST\") => {\n    return (dispatch, getState) => {\n        return utils\n            .fetchFromCake(dispatch)(endpoint, method, postData)\n            .then(data => {\n                dispatch(actions.fetchSuccess());\n            })\n            .catch(e => console.log(e));\n    };\n};\n\nexport const saveMeetingNotesToCake = (postData, endpoint, method = \"POST\") => {\n    return (dispatch, getState) => {\n        return utils\n            .fetchFromCake(dispatch)(endpoint, method, postData)\n            .then(data => {\n                dispatch(actions.fetchSuccess());\n                if (postData.action === \"add\") {\n                    dispatch(\n                        actions.updateMeetingNoteId(\n                            postData.meeting_id,\n                            data.data.id\n                        )\n                    );\n                }\n                //console.log(data);\n            });\n    };\n};\n\nexport const formatMeetingNotes = (\n    meetingNotes,\n    meetingIdMap,\n    isDelete = false\n) => {\n    return Object.keys(meetingNotes).reduce((accum, current, index, arr) => {\n        const meetingNote = meetingNotes[current];\n        const {\n            meeting_note_id,\n            meeting_id,\n            heading,\n            note,\n            active\n        } = meetingNote;\n\n        const theHeading = heading ? heading : ''\n        const theNote = note ? note : ''\n\n        let controller = '/MeetingNotes/';\n        let url = ''\n        let meetingNoteId = {};\n        let action = '';\n        const meetingId = meetingIdMap.hasOwnProperty(meeting_id)\n            ? meetingIdMap[meeting_id]\n            : meeting_id;\n\n        if (meeting_note_id) {\n            meetingNoteId = { id: meeting_note_id };\n            action = \"edit\";\n            url = controller + action + \"/\" + meeting_note_id;\n        } else {\n            action = \"add\";\n            url = controller + action;\n        }\n\n        if (isDelete && meeting_note_id) {\n            action = \"delete\";\n            url = controller + action + \"/\" + meeting_note_id;\n        }\n        if ( ( theHeading !== '' && theNote !== '' )) {\n            return accum.concat({\n                ...meetingNoteId,\n                meeting_id: meetingId,\n                heading: theHeading,\n                note: theNote,\n                active,\n                action,\n                url\n            });\n        }\n        return accum;\n    }, [])\n};\n\nexport const schedulePublishedCheck = isChecked => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const apiRoot = getApiRoot(state);\n        const { schedule } = state;\n        const { scheduleId } = schedule;\n\n        dispatch(actions.hideAddPart());\n        dispatch(actions.setScheduleData({ isPublished: isChecked }));\n        dispatch(\n            saveToCake(\n                { id: scheduleId, published: isChecked },\n                `${apiRoot}/schedules/edit/${scheduleId}`,\n                \"POST\"\n            )\n        );\n        if (isChecked) {\n            dispatch(saveScheduleThunk());\n        }\n    };\n};\n\nexport const handleAddRemoveMeetingNote = (meetingId, isAdd) => {\n    return (dispatch, getState) => {\n        const { meetingNote, meetingIdMap, ...state } = getState();\n        const API_URL = getApiRoot(state);\n        const mn = [meetingNote[meetingId]] || [{}];\n\n        if (isAdd) {\n            dispatch(actions.toggleMeetingNote(meetingId, isAdd));\n        } else {\n            if (mn[0].meeting_note_id)\n                formatMeetingNotes(meetingNote, meetingIdMap, true).forEach(\n                    mn => {\n                        console.log(\"delete meeting note\", mn);\n                        dispatch(\n                            saveMeetingNotesToCake(mn, `${API_URL}${mn.url}`)\n                        );\n                    }\n                );\n        }\n        dispatch(actions.toggleMeetingNote(meetingId, isAdd));\n    };\n};\n\n\nexport const updateFirstMeetingPartStartTime = () => {\n\n}\n","import React from \"react\";\nimport MultipleDatePicker from \"../Components/MultipleDatePicker\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from \"react-redux\";\nimport utils from \"../Utility/utilities\";\nimport { getScheduleDates } from \"../Redux/reducers/rootReducer\";\nimport Aux from \"./Aux\";\n\nimport * as asyncActions from \"../Redux/actions/async\";\n\nconst DatePickerInputGroup = props => {\n    const { addMeetings, scheduleStartDate, meetingCount, isPublished } = props;\n\n    const slug = ( meetingCount > 1 || meetingCount === 0) ? 's' : '';\n\n    const meetingLabel = <Aux>{`${meetingCount} meeting${slug}`}</Aux>;\n\n    const datePickerInputExtraProps = {\n        disabled: isPublished,\n        style: {\n            //backgroundColor: \"#fff\",\n            borderTopRightRadius: \"0.2rem\",\n            borderBottomRightRadius: \"0.2rem\"\n        },\n        className: \"btn btn-primary\"\n    };\n    return (\n        <div className=\"input-group input-group-sm \">\n            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">\n                    <FontAwesomeIcon icon={faCalendarAlt} />{\" \"}\n                </span>\n                <span className=\"input-group-text\" id=\"basic-addon2\">\n                    {meetingLabel}\n                </span>\n            </div>\n            <div className=\"input-group-append\">\n                <MultipleDatePicker\n                    scheduleStartDate={scheduleStartDate}\n                    extraInputProps={datePickerInputExtraProps}\n                    onSubmit={dates => {\n                        dates.forEach(date => {\n                            addMeetings(\n                                utils.formatDate(date, \"DD/MM/YYYY\"),\n                                utils.getUUID()\n                            );\n                        });\n                    }}\n                />\n            </div>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = {\n    addMeetings: asyncActions.addMeetingSortedThunk\n};\n\nconst mapStateToProps = state => {\n    const { startDate } = getScheduleDates(state);\n    return {\n        scheduleStartDate: utils.stringDateToDate(startDate),\n        isPublished: state.schedule.isPublished\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DatePickerInputGroup);\n","\nimport React from \"react\";\n\nimport moment from \"moment\";\nimport { Spinner } from \"../Components/Spinner\";\nimport IconLink from \"../Components/IconLink\";\nimport DatePickerInputGroup from './DatePickerInputGroup'\nimport Aux from '../Components/Aux'\nimport {\n    faFilePdf,\n    faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { connect } from \"react-redux\";\nimport { Col } from \"reactstrap\";\nimport { setMeetingDate } from \"../Redux/actions/actionCreators\";\nimport { addMeetingSortedThunk } from \"../Redux/actions/async\";\n\nconst AddMeeting = props => {\n    const {\n        meetingCount,\n        apiRoot,\n        scheduleId,\n        isFetching\n    } = props;\n\n    const spinner = isFetching ? <Spinner /> : null;\n    let addMeeting = null;\n\n    if(scheduleId) {\n        addMeeting = (\n            <Aux>\n            <Col>{spinner}</Col>\n            <Col lg={{ size: 3 }}>\n                   <DatePickerInputGroup meetingCount={meetingCount}/>\n            </Col>\n            <Col>\n                <IconLink\n                    display={scheduleId}\n                    icon={faFilePdf}\n                    href={apiRoot + \"schedules/pdf-view/\" + scheduleId}\n                    title=\"View PDF\"\n                    target=\"_blank\"\n                />\n\n                <IconLink\n                    display={scheduleId}\n                    icon={faUsers}\n                    href={apiRoot + \"people/view-who/\" + scheduleId}\n                    title=\"Assignments\"\n                    target=\"_blank\"\n                />\n            </Col>\n            </Aux>\n        )\n    }\n    return addMeeting;\n\n};\n\nconst mapDispatchToProps = {\n    meetingDateSelected: setMeetingDate,\n    clickMeetingAddButton: addMeetingSortedThunk\n};\nconst mapStateToProps = state => {\n    const meetingCount = state.meetingsById.length || 0;\n    const { apiRoot, schedule, fetchReducer, addMeeting } = state;\n    const { start_date, end_date } = schedule;\n    const { isFetching } = fetchReducer;\n    const { meetingDate } = addMeeting;\n    const scheduleId = schedule.scheduleId;\n    return {\n        scheduleId,\n        apiRoot: apiRoot.baseUrl,\n        isFetching,\n        meetingDate,\n        meetingCount: meetingCount,\n        startDate: moment(start_date),\n        endDate: moment(end_date),\n        isPublished: state.schedule.isPublished\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddMeeting);\n","import moment from \"moment\";\nimport React from \"react\";\nimport Calendar from '@material-ui/icons/CalendarTodayTwoTone'\n// import DatePicker from 'react-datepicker'\nimport classes from './MeetingTitle.module.css';\nimport DatePicker from 'react-datepicker';\nimport {connect} from 'react-redux';\nimport AddMeeting from '../Components/AddMeeting';\n\nimport { resortMeetingsAfterDateChange } from '../Redux/actions/async';\nimport {\n    Row,\n    Col\n} from 'reactstrap';\n\nclass MeetingDateTitle extends React.Component {\n    render(){\n    return (\n        <h5\n            style={{cursor:'pointer'}}\n            className={classes.MeetingTitle}\n            onClick={this.props.onClick}\n        ><Calendar style={{marginBottom: '6px'}}/>{' '}{this.props.value}</h5>\n    )}\n}\n\nconst MeetingTitle = ({ meetingDate, handleChange, meetingId, deleteMeeting, isPublished })  => {\n    const md = moment(meetingDate, \"DD/MM/YYYY\")\n    return (\n        <Row>\n            <Col>\n            <DatePicker\n                customInput={<MeetingDateTitle />}\n                selected={md}\n                disabled={isPublished}\n                dateFormat={\"ddd Do MMMM YYYY\"}\n                onChange={(m) => { handleChange(meetingId, m.format('DD/MM/YYYY'))}} />\n            </Col>\n\n             <AddMeeting />\n\n        </Row>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const { meetingId } = ownProps;\n    //console.log(state,ownProps);\n    return {\n        meeting: state.meetings[meetingId],\n        isPublished: state.schedule.isPublished\n    }\n}\nconst mapDispatchToProps = {\n    handleChange: resortMeetingsAfterDateChange\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingTitle);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst AddPart = props => {\n    const {\n        partArrayObject,\n        hideAddPart,\n        updateForm,\n        addParts,\n        insertPart,\n        meetingId\n    } = props;\n\n    let partSelectOptions = null;\n    if (partArrayObject) {\n        partSelectOptions = partArrayObject.map((x, index) => {\n            return (\n                <option key={x.id} value={x.id}>\n                    {`${x.partname} (${x.minutes} ${x.min_suffix.trim()})`}\n                </option>\n            );\n        });\n    }\n\n    return (\n        <form className=\"form-inline\">\n            <div className=\"form-group\">\n                <select\n                    id=\"addPart\"\n                    value={addParts.fieldValue}\n                    className=\"form-control form-control-sm\"\n                    onChange={e => {\n                        updateForm(\n                            e.target.id,\n                            e.target.value,\n                            e.target.options[e.target.selectedIndex].text\n                        );\n                    }}\n                >{partSelectOptions}</select>\n                <button\n                    type=\"button\"\n                    className=\"ml-2 btn btn-primary btn-sm mt-1\"\n                    onClick={() => {\n                        console.log('insertPart');\n                        insertPart(meetingId);\n                    }}\n                >\n                    <FontAwesomeIcon icon={faPlusCircle} /> Add\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"ml-2 btn btn-danger btn-sm mt-1\"\n                    onClick={() => {\n                        hideAddPart();\n                    }}\n                >\n                    <FontAwesomeIcon icon={faTimesCircle} /> Close\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default AddPart;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { isCoVisit, getMeeting } from \"../Redux/reducers/meetingsReducer\";\nimport Input from \"reactstrap/lib/Input\";\nimport Label from \"reactstrap/lib/Label\";\n\nimport { faSave, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Row } from \"reactstrap\";\nimport Col from \"reactstrap/lib/Col\";\nimport FormGroup from \"reactstrap/lib/FormGroup\";\nimport Button from \"reactstrap/lib/Button\";\nimport { Aux } from \"../Components/Aux\";\nimport { toggleScheduleSaveModal } from \"../Redux/actions/actionCreators\";\nimport { getDisplayPartPicker } from \"../Redux/reducers/rootReducer\";\nimport {\n    chairmanChange,\n    addPartPickerThunk,\n    addCoPartThunk,\n    auxCounselorChange,\n    insertPartThunk,\n    deleteMeetingThunk,\n    saveScheduleThunk\n} from \"../Redux/actions/async\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { getCurrentPartList } from \"../Redux/reducers/rootReducer\";\n\nimport { showPartPicker } from \"../Redux/reducers/addPartReducer\";\nimport AddPart from \"./AddPart\";\n\nimport { updateForm, hideAddPart } from \"../Redux/actions/actionCreators\";\n\n/*\nimport {\n    CSSTransition,\n    TransitionGroup,\n} from 'react-transition-group';\n*/\n\nconst ConfigureMeeting = props => {\n    const {\n        addPart,\n        addParts,\n        auxCounselors,\n        chairmen,\n        checkCoVisit,\n        hideAddPart,\n        insertPart,\n        isPublished,\n        meeting,\n        meetingId,\n        partArrayObject,\n        saveButtonPress,\n        setChairmanChange,\n        setMeetingValueOnChange,\n        diplayPartPicker,\n        toggleCoVisit,\n        updateForm,\n        deleteMeeting\n    } = props;\n\n    const checkBoxName = `checkBox-${meetingId}`;\n\n    const { auxiliary_counselor_id, person_id } = meeting;\n    const auxCounselorId = auxiliary_counselor_id || \"\";\n    const chairmanId = person_id || \"\";\n\n    const pleaseSelect = [{ id: 0, name: \"(Please select)\" }];\n\n    const auxCounselorsWithPleaseSelect = pleaseSelect.concat(auxCounselors);\n    const meetingChairmenWithPleaseSelect = pleaseSelect.concat(chairmen);\n\n    //  console.log(withPleaseSelect);\n    let coVisit = checkCoVisit(meetingId);\n\n    //let style = { fontSize: \"14px\", marginTop: \"5px\" };\n\n    let displayPicker = diplayPartPicker(meetingId);\n\n    const partArrayAsObjects = partArrayObject(meetingId);\n\n    let addPartButton = null;\n    let addPartPicker = null;\n\n    if (!displayPicker && !isPublished) {\n        addPartButton = (\n            <Button\n                size=\"sm\"\n                color=\"primary\"\n                style={{ marginRight: \"12px\", cursor: \"pointer\" }}\n                onClick={e => {\n                    addPart(meetingId);\n                }}\n            >\n                <FontAwesomeIcon icon=\"plus-circle\" /> Add part\n            </Button>\n        );\n    }\n    if (displayPicker) {\n        addPartPicker = (\n            <AddPart\n                key={\"AddPartPickert\" + meetingId}\n                hideAddPart={hideAddPart}\n                meetingId={meetingId}\n                updateForm={updateForm}\n                partArrayObject={partArrayAsObjects}\n                addParts={addParts}\n                insertPart={insertPart}\n            />\n        );\n    }\n\n    return (\n        <Aux>\n            <Row form>\n                <Col lg={2}>\n                    <FormGroup check inline>\n                        <Input\n                            disabled={isPublished}\n                            key={meetingId}\n                            checked={coVisit}\n                            id={checkBoxName}\n                            bsSize=\"sm\"\n                            onChange={e =>\n                                toggleCoVisit(meetingId, e.target.checked)\n                            }\n                            type=\"checkbox\"\n                        />\n                        <Label\n                            size=\"sm\"\n                            check={true}\n                            htmlFor={checkBoxName}\n                            title=\"Circuit Overseers Visit\"\n                        >\n                            C.O. Visit\n                        </Label>\n                    </FormGroup>\n                </Col>\n\n                <Col lg={4}>\n                    <div className=\"form-inline\">\n                        <FormGroup inline>\n                            <Label\n                                size=\"sm\"\n                                for={`auxiliary_counselor_id-${meetingId}`}\n                            >\n                                Auxiliary Counselor&nbsp;&nbsp;\n                            </Label>\n                            <Input\n                                disabled={isPublished}\n                                id={`auxiliary_counselor_id-${meetingId}`}\n                                bsSize=\"sm\"\n                                type=\"select\"\n                                value={auxCounselorId}\n                                onChange={e => {\n                                    setMeetingValueOnChange(\n                                        meetingId,\n                                        \"auxiliary_counselor_id\",\n                                        e.target.value\n                                    );\n                                }}\n                            >\n                                {auxCounselorsWithPleaseSelect.map(obj => {\n                                    return (\n                                        <option key={obj.id} value={obj.id}>\n                                            {obj.name}\n                                        </option>\n                                    );\n                                })}\n                            </Input>\n                        </FormGroup>\n                    </div>\n                </Col>\n\n                <Col lg={4} xs=\"12\">\n                    <div className=\"form-inline\">\n                        <FormGroup>\n                            <Label size=\"sm\" for=\"chairman_id\">\n                                Chairman&nbsp;&nbsp;\n                            </Label>\n                            <Input\n                                disabled={isPublished}\n                                value={chairmanId}\n                                id={`person_id-${meetingId}`}\n                                bsSize=\"sm\"\n                                onChange={e => {\n                                    setChairmanChange(\n                                        meetingId,\n                                        \"person_id\",\n                                        e.target.value\n                                    );\n                                }}\n                                type=\"select\"\n                            >\n                                {meetingChairmenWithPleaseSelect.map(obj => {\n                                    return (\n                                        <option key={obj.id} value={obj.id}>\n                                            {obj.name}\n                                        </option>\n                                    );\n                                })}\n                            </Input>\n                        </FormGroup>\n                    </div>\n                </Col>\n                <Col>\n                    <span className=\"float-right\">\n                        <Button\n                            disabled={isPublished}\n                            className=\"align-bottom\"\n                            size=\"sm\"\n                            onClick={saveButtonPress}\n                        >\n                            <FontAwesomeIcon icon={faSave} /> Save\n                        </Button>\n\n                        <Button\n                            key={meetingId}\n                            className=\"ml-4\"\n                            size=\"sm\"\n                            disabled={isPublished}\n                            color=\"danger\"\n                            onClick={e => {\n                                !isPublished && deleteMeeting(meetingId);\n                            }}\n                            //className=\"btn btn-sm btn-link mb-1\"\n                            title=\"Delete meeting\"\n                        >\n                            <FontAwesomeIcon icon={faTrashAlt} /> Delete\n                        </Button>\n                    </span>\n                </Col>\n            </Row>\n            <Row>\n                    <Col className=\"mb-2 mt-2\">\n                    {addPartButton}\n                    {addPartPicker}\n                    </Col>\n\n            </Row>\n        </Aux>\n    );\n};\n\nconst mapDispatchToProps = {\n    insertPart: insertPartThunk,\n    toggleCoVisit: addCoPartThunk,\n    addPart: addPartPickerThunk,\n    hideAddPart: hideAddPart,\n    updateForm: updateForm,\n    setMeetingValueOnChange: auxCounselorChange,\n    setChairmanChange: chairmanChange,\n    toggleSaveModal: toggleScheduleSaveModal,\n    saveButtonPress: saveScheduleThunk,\n    deleteMeeting: deleteMeetingThunk\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        meeting: getMeeting(ownProps.meetingId, state),\n        isPublished: state.schedule.isPublished,\n        addParts: state.addParts,\n        diplayPartPicker: meetingId => getDisplayPartPicker(meetingId, state),\n        chairmen: state.privs.meetingChairmen || [],\n        auxCounselors: state.privs.auxCounselors || [],\n        partArrayObject: meetingId => getCurrentPartList(meetingId, state),\n        checkCoVisit: meetingId => isCoVisit(meetingId, state),\n        showPartPicker: meetingId => showPartPicker(meetingId, state)\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ConfigureMeeting);\n","import React from \"react\";\nimport { Row, Col } from 'reactstrap';\n\nconst PartTitle = () => {\n    const style = {\n        fontSize: \"small\",\n        fontWeight: \"bold\"\n    };\n\n    return (\n        <Row form className=\"d-none d-lg-flex\">\n            <Col style={style}>\n                Start Time\n            </Col>\n            <Col lg=\"3\" style={style}>\n                Part Name\n            </Col>\n            <Col style={style}>\n                Minutes\n            </Col>\n            <Col style={style}>\n                Min Suffix\n            </Col>\n            <Col style={style}>\n                Counsel Mins\n            </Col>\n            <Col lg=\"2\" style={style}>\n                Aux School\n            </Col>\n            <Col lg=\"2\" style={style}>\n                Main Hall\n            </Col>\n            <Col style={style}>\n                Actions\n            </Col>\n        </Row>\n    );\n};\n\nexport default PartTitle;\n","import React from \"react\";\n//import { fab } from '@fortawesome/free-brands-svg-icons'\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { library } from '@fortawesome/fontawesome-svg-core'\nimport MeetingTitle from \"./MeetingTitle\";\nimport ConfigureMeeting from \"./ConfigureMeeting\";\nimport PartTitles from \"./PartTitles\";\nimport Card from 'reactstrap/lib/Card';\nimport CardBody from 'reactstrap/lib/CardBody'\n\nconst Meeting = props => {\n    const { meetingId, meetingDate, children, deleteMeeting } = props;\n\n    return (\n\n        <Card className=\"bg-light mb-3\">\n            <CardBody>\n            <MeetingTitle\n                meetingDate={meetingDate}\n                meetingId={meetingId}\n                deleteMeeting={deleteMeeting} />\n            <ConfigureMeeting\n                meetingId={meetingId}\n                deleteMeeting={deleteMeeting}\n            />\n            <PartTitles />\n            {children}\n            </CardBody>\n        </Card>\n\n    );\n};\n\nexport default Meeting;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ClickableIconWrappedInDiv = props => {\n    const {\n        style,\n        clicked,\n        icon,\n        meetingId,\n        partId,\n        indexNumber,\n        isPublished,\n        title\n    } = props;\n    return (\n        <div\n            style={style}\n            title={title}\n            onClick={() =>\n                !isPublished && clicked(meetingId, partId, indexNumber)\n            }\n        >\n            <FontAwesomeIcon icon={icon} />\n        </div>\n    );\n};\n\nexport default ClickableIconWrappedInDiv;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Col from 'reactstrap/lib/Col'\nimport Row from 'reactstrap/lib/Row';\nimport {\n    faUndoAlt,\n    faTrashAlt,\n    faPlusCircle,\n    faMusic,\n    faUser\n\n\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { connect } from \"react-redux\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport ClickableIconWrappedInDiv from \"./ClickableIconWrappedInDiv\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    resetValuesThunk,\n    updateMeetingPartThunk\n} from \"../Redux/actions/async\";\nimport { getPrivs } from \"../Redux/reducers/rootReducer\";\nimport utils from \"../Utility/utilities\";\n\nlibrary.add(fab, faTrashAlt, faUndoAlt, faPlusCircle, faMusic);\n\nclass Part extends Component {\n    render() {\n        const {\n            getSelectList,\n            resetPartValues,\n            assistant_prefix,\n            aux_assistant_id,\n            aux_person_id,\n            assistant,\n            assistant_id,\n            no_assign,\n            counsel_mins,\n            deletePart,\n            person_id,\n            getElements,\n            has_auxiliary,\n            id: partId,\n            updateTime,\n            indexNumber,\n            meetingId,\n            meetingPartsById,\n            min_suffix,\n            minutes,\n            partname,\n            startTime,\n            meetingStartTime,\n            replace_token,\n            school_part,\n            updateMeetingPart,\n            isPublished\n        } = this.props;\n\n        let songNumber = this.props.songNumber || \"\";\n\n        const pointer = isPublished ? \"not-allowed\" : \"pointer\";\n\n        //2018-07-04T19:30:00+00:00 format = 'YYYY-MM-DDTHH:mm:ssZ'\n        let mainHallAssigned = null;\n        let mainHallAssistant = null;\n        let auxAssigned = null;\n        let auxAssistant = null;\n        if (!no_assign) {\n            mainHallAssigned = getSelectList(partId, false);\n        }\n        if (assistant) {\n            mainHallAssistant = getSelectList(partId, true);\n        }\n\n        if (has_auxiliary) {\n            auxAssigned = getSelectList(partId, false);\n        }\n\n        if (has_auxiliary && assistant) {\n            auxAssistant = getSelectList(partId, false);\n        }\n\n        let style = {\n            fontSize: \"14px\",\n            marginTop: \"5px\",\n            display: \"inline-flex \"\n        };\n\n        let defaultClasses = [\"form-control\", \"form-control-sm\"];\n\n        let assistantWithNoAssign =\n            no_assign && assistant\n                ? defaultClasses\n                : defaultClasses.concat(\"mt-1\");\n        let assistant2ndSchool =\n            has_auxiliary && assistant\n                ? defaultClasses.concat(\"mt-1\")\n                : defaultClasses;\n\n        if (utils.isEmptyObject(meetingPartsById)) {\n            return null;\n        }\n\n\n        const savedStartTimeFormatted = moment(startTime).format(\"h:mm A\");\n\n        return (\n            <Row form className='mt-1'>\n                <Col lg=\"1\" xs=\"4\" className=\"mb-1\">\n                    {indexNumber === 0 ? (\n                        <input\n                            className={defaultClasses.join(\" \")}\n                            type=\"text\"\n                            name=\"meetingStartTime\"\n                            disabled={isPublished}\n                            onChange={e => {\n                                updateTime(meetingId, e.target.value);\n                            }}\n                            value={meetingStartTime}\n                        />\n                    ) : (\n                        <div style={{ ...style, marginLeft: \"8px\" }}>\n                            {savedStartTimeFormatted}\n                        </div>\n                    )}\n                </Col>\n                <Col lg=\"3\" sm=\"6\" xs=\"12\" md=\"4\" className=\"mb-1\">\n                    {replace_token ? (\n                        <div className=\"input-group\">\n                            <input\n                                disabled={isPublished}\n                                style={{ width: \"8em\" }}\n                                className={defaultClasses.join(\" \")}\n                                type=\"text\"\n                                readOnly\n                                name=\"displayPartname\"\n                                value={partname}\n                            />\n                            <input\n                                type=\"text\"\n                                className={defaultClasses.join(\" \")}\n                                maxLength=\"3\"\n                                disabled={isPublished}\n                                style={{ textAlign: \"center\" }}\n                                value={songNumber}\n                                onChange={e => {\n                                    updateMeetingPart(\n                                        meetingId,\n                                        partId,\n                                        \"songNumber\",\n                                        e.target.value,\n                                        Boolean(replace_token)\n                                    );\n                                }}\n                            />\n                            <div className=\"input-group-append\">\n                                <span className=\"input-group-text input-group-text-sm\">\n                                    <FontAwesomeIcon icon=\"music\" />\n                                </span>\n                            </div>\n                        </div>\n                    ) : (\n                        <input\n                            className={defaultClasses.join(\" \")}\n                            type=\"text\"\n                            disabled={isPublished}\n                            name=\"partname\"\n                            onChange={e => {\n                                // //meetingId, partId, fieldName, txt, isSong, partName\n                                updateMeetingPart(\n                                    meetingId,\n                                    partId,\n                                    \"partname\",\n                                    e.target.value,\n                                    Boolean(replace_token)\n                                );\n                            }}\n                            value={partname}\n                        />\n                    )}\n                </Col>\n                <Col xs=\"3\" lg=\"1\">\n                    <input\n                        className={defaultClasses.join(\" \")}\n                        type=\"text\"\n                        disabled={isPublished}\n                        onChange={e => {\n                            updateMeetingPart(\n                                meetingId,\n                                partId,\n                                \"minutes\",\n                                e.target.value\n                            );\n                        }}\n                        field_name=\"minutes\"\n                        value={minutes}\n                    />\n                </Col>\n                <Col lg=\"1\" style={{ ...style }}>\n                    {min_suffix}\n                </Col>\n                <Col xs=\"3\" lg=\"1\" className=\"mb-1\">\n                    {school_part && (\n                        <input\n                            disabled={isPublished}\n                            onChange={e => {\n                                updateMeetingPart(\n                                    meetingId,\n                                    partId,\n                                    \"counsel_mins\",\n                                    e.target.value\n                                );\n                            }}\n                            className={defaultClasses.join(\" \")}\n                            type=\"text\"\n                            readOnly={!school_part}\n                            field_name=\"counsel_mins\"\n                            value={counsel_mins}\n                        />\n                    )}\n                </Col>\n                <Col lg=\"2\" className=\"mb-1\">\n                    {has_auxiliary && (\n                        <select\n                            disabled={isPublished}\n                            className={defaultClasses.join(\" \")}\n                            onClick={getElements}\n                            is_assistant=\"false\"\n                            name=\"aux_person_id\"\n                            value={aux_person_id || \"\"}\n                            onChange={e => {\n                                updateMeetingPart(\n                                    meetingId,\n                                    partId,\n                                    e.target.name,\n                                    e.target.value\n                                );\n                            }}\n                        >\n                            <option value={0}>(please select)</option>\n                            {auxAssigned &&\n                                auxAssigned.map(selectItems => (\n                                    <option\n                                        key={selectItems.id}\n                                        value={selectItems.id}\n                                    >\n                                        {selectItems.name}\n                                    </option>\n                                ))}\n                        </select>\n                    )}\n                    {has_auxiliary && assistant && (\n                        <select\n                            disabled={isPublished}\n                            className={assistant2ndSchool.join(\" \")}\n                            onChange={e => {\n                                //fieldValue: any, meetingId: any, partId: any, fieldName: any)\n                                updateMeetingPart(\n                                    meetingId,\n                                    partId,\n                                    e.target.name,\n                                    e.target.value\n                                );\n                            }}\n                            name=\"aux_assistant_id\"\n                            value={aux_assistant_id || \"\"}\n                        >\n                            <option value={0}>(please select)</option>\n                            {auxAssistant &&\n                                auxAssistant.map(selectItems => (\n                                    <option\n                                        key={selectItems.id}\n                                        value={selectItems.id}\n                                    >\n                                        {selectItems.name}\n                                    </option>\n                                ))}\n                        </select>\n                    )}\n                </Col>\n                <Col lg=\"2\">\n                    {!no_assign && (\n                        <select\n                            disabled={isPublished}\n                            className={defaultClasses.join(\" \")}\n                            name=\"person_id\"\n                            onChange={e => {\n                                updateMeetingPart(\n                                    meetingId,\n                                    partId,\n                                    e.target.name,\n                                    e.target.value\n                                );\n                            }}\n                            value={person_id || \"\"}\n                        >\n                            <option value={1}>(please select)</option>\n                            {mainHallAssigned &&\n                                mainHallAssigned.map(selectItems => (\n                                    <option\n                                        key={selectItems.id}\n                                        value={selectItems.id}\n                                    >\n                                        {selectItems.name}\n                                    </option>\n                                ))}\n                        </select>\n                    )}\n\n                    {assistant && (\n                        <select\n                            disabled={isPublished}\n                            className={assistantWithNoAssign.join(\" \")}\n                            onClick={getElements}\n                            name=\"assistant_id\"\n                            type=\"text\"\n                            value={assistant_id || \"\"}\n                            onChange={e => {\n                                updateMeetingPart(\n                                    meetingId,\n                                    partId,\n                                    e.target.name,\n                                    e.target.value\n                                );\n                            }}\n                            is_assistant=\"true\"\n                            placeholder={assistant_prefix && assistant_prefix}\n                        >\n                            <option key={0} value=\"\">\n                                (please select)\n                            </option>\n                            {mainHallAssistant &&\n                                mainHallAssistant.map(selectItems => (\n                                    <option\n                                        key={selectItems.id}\n                                        value={selectItems.id}\n                                    >\n                                        {selectItems.name}\n                                    </option>\n                                ))}\n                        </select>\n                    )}\n                </Col>\n                <Col lg=\"1\" style={{ ...style }}>\n                    <ClickableIconWrappedInDiv\n                        style={{ marginRight: \"12px\", cursor: pointer }}\n                        clicked={deletePart}\n                        isPublished={isPublished}\n                        icon={faTrashAlt}\n                        title=\"Delete this part\"\n                        partId={partId}\n                        meetingId={meetingId}\n                        indexNumber={indexNumber}\n                    />\n                    <ClickableIconWrappedInDiv\n                        style={{ marginRight: \"12px\", cursor: pointer }}\n                        clicked={resetPartValues}\n                        isPublished={isPublished}\n                        icon={faUndoAlt}\n                        title=\"Reset fields to default values\"\n                        partId={partId}\n                        meetingId={meetingId}\n                        indexNumber={indexNumber}\n                    />\n                     {/*<ClickableIconWrappedInDiv\n                        style={{ cursor: pointer }}\n                        clicked={() => console.log('list history' , isPublished, partId, meetingId, indexNumber)}\n                        isPublished={isPublished}\n                        icon={faUser}\n                        title=\"Reset fields to default values\"\n                        partId={partId}\n                        meetingId={meetingId}\n                        indexNumber={indexNumber}\n                     />*/}\n                </Col>\n            </Row>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    resetPartValues: resetValuesThunk,\n    updateMeetingPart: updateMeetingPartThunk\n};\n\nconst mapStateToProps = state => {\n    return {\n        getSelectList: (partId, isAssistant) => getPrivs(state, partId, isAssistant),\n        isPublished: state.schedule.isPublished\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Part);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStickyNote } from \"@fortawesome/free-solid-svg-icons/faStickyNote\";\nimport { faMinusCircle } from \"@fortawesome/free-solid-svg-icons/faMinusCircle\";\nimport { faSave } from \"@fortawesome/free-solid-svg-icons/faSave\"\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    Button,\n    Input,\n    FormGroup,\n    Label\n} from \"reactstrap\";\n\nimport {\n    handleAddRemoveMeetingNote, saveScheduleThunk\n} from '../Redux/actions/async'\nimport {\n    updateMeetingNote,\n    cancelMeetingNote\n} from \"../Redux/actions/actionCreators\";\n\nexport const CheckBoxWrapper = (props) => {\n    let classes = ['form-row']\n    if(props.extraClasses) {\n        classes.push(props.extraClasses)\n    }\n    return (\n        <div className={classes.join(' ')}>\n            <div className=\"col\">\n                {props.children}\n            </div>\n            </div>\n    )\n}\n\nconst MeetingNoteCheckbox = ({\n    handleAddRemoveMeetingNote,\n    meetingId,\n    active,\n    isPublished\n}) => {\n    const meetingNoteLabel = active ? \"Remove \" : \"Add a\";\n    const color = active ? \"danger\" : \"primary\";\n\n    const icon = active ? (\n        <FontAwesomeIcon icon={faMinusCircle} />\n    ) : (\n        <FontAwesomeIcon icon={faStickyNote} />\n    );\n    //<NoteAdd />;\n    const checkBoxId = `meetingNoteCheckbox-${meetingId}`;\n    return (\n\n            <Button\n                disabled={isPublished}\n                color={color}\n                size=\"sm\"\n                onClick={e => {\n                    handleAddRemoveMeetingNote(meetingId, !active);\n                }}\n                id={checkBoxId}\n            >\n                {icon} {meetingNoteLabel} meeting note\n            </Button>\n\n    );\n};\n\nconst MeetingNote = ({\n    meetingId,\n    updateMeetingNote,\n    heading,\n    note,\n    active = false,\n    handleAddRemoveMeetingNote,\n    saveScheduleThunk,\n    isPublished\n}) => {\n    let meetingNote = null;\n    let meetingNoteCheckbox = (\n        <MeetingNoteCheckbox\n            isPublished={isPublished}\n            active={active}\n            meetingId={meetingId}\n            handleAddRemoveMeetingNote={handleAddRemoveMeetingNote}\n        />\n    );\n\n    if (active) {\n        meetingNote = (\n            <Card className=\"mt-2\">\n                <CardHeader tag=\"h5\">Meeting Note</CardHeader>\n                <CardBody>\n                    <FormGroup>\n                        <Label for={`heading-${meetingId}`}>Heading</Label>\n                        <Input\n                            disabled={isPublished}\n                            name=\"heading\"\n                            id={`heading-${meetingId}`}\n                            bsSize=\"sm\"\n                            onChange={e =>\n                                updateMeetingNote(\n                                    meetingId,\n                                    e.target.name,\n                                    e.target.value\n                                )\n                            }\n                            type=\"text\"\n                            value={heading}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for={`note-${meetingId}`}>Note</Label>\n                        <Input\n                            disabled={isPublished}\n                            bsSize=\"sm\"\n                            value={note}\n                            id={`note-${meetingId}`}\n                            name=\"note\"\n                            onChange={e =>\n                                updateMeetingNote(\n                                    meetingId,\n                                    e.target.name,\n                                    e.target.value\n                                )\n                            }\n                            rows=\"4\"\n                            type=\"textarea\"\n                        />\n                    </FormGroup>\n                    {/*<Button>Cancel</Button>*/}\n                        <CheckBoxWrapper>\n                            {meetingNoteCheckbox}\n\n                        <Button\n                            disabled={isPublished}\n                            className=\"align-bottom ml-3\"\n                            size=\"sm\"\n                            onClick={saveScheduleThunk}\n                        >\n                            <FontAwesomeIcon icon={faSave} /> Save\n                        </Button>\n\n                        </CheckBoxWrapper>\n                </CardBody>\n            </Card>\n        );\n    } else {\n        meetingNote = (<CheckBoxWrapper extraClasses=\"mt-3\">\n                {meetingNoteCheckbox}\n                </CheckBoxWrapper> ) ;\n    }\n    return meetingNote;\n};\n\nconst isActive = meetingNote => {\n    let ret = meetingNote && meetingNote.active;\n    return ret !== \"undefined\" && meetingNote.active === true;\n};\n\nconst getFieldValue = (meetingNoteState, fieldName) => {\n    return meetingNoteState.hasOwnProperty(fieldName)\n        ? meetingNoteState[fieldName]\n        : \"\";\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const meetingNote = state.meetingNote[ownProps.meetingId] || {};\n    const { schedule } = state;\n    const { isPublished } = schedule;\n    return {\n        active: isActive(meetingNote),\n        meetingNote: meetingNote,\n        heading: getFieldValue(meetingNote, \"heading\"),\n        note: getFieldValue(meetingNote, \"note\"),\n        meetingNotes: state.meetingNote,\n        isPublished,\n        disabled: isPublished\n    };\n};\nconst mapDispatchToProps = {\n    handleAddRemoveMeetingNote,\n    cancelMeetingNote,\n    updateMeetingNote,\n    saveScheduleThunk\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MeetingNote);\n","//import moment from 'moment'\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport { getSchedulesThunk, getScheduleThunk } from \"../Redux/actions/async\";\nimport { getSchedulesList } from \"../Redux/reducers/schedulesReducer\";\n\nimport { Input, Label, Col, FormGroup } from \"reactstrap\";\nclass LoadSchedule extends Component {\n    componentDidMount() {\n        const { getSchedulesList } = this.props;\n        getSchedulesList();\n    }\n\n    render() {\n        const { selectList, getSchedule, scheduleId } = this.props;\n        return (\n            <FormGroup row>\n                <Label className=\"font-weight-bold\" size=\"sm\" sm={3}>\n                    Schedule\n                </Label>\n                <Col sm={9}>\n                    <Input\n                        bsSize=\"sm\"\n                        onChange={e => getSchedule(e.target.value)}\n                        type=\"select\"\n                        value={scheduleId}\n                    >\n                        <option value=\"\">(Select a schedule)</option>\n                        {selectList &&\n                            selectList.map(obj => {\n                                return (\n                                    <option key={obj.id} value={obj.id}>\n                                        {obj.month_year}\n                                    </option>\n                                );\n                            })}\n                    </Input>\n\n                </Col>\n\n\n            </FormGroup>\n\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    getSchedule: getScheduleThunk,\n    getSchedulesList: getSchedulesThunk\n}\n/*\nconst mapDispatchToProps = dispatch => {\n    return {\n        getSchedule: id => {\n            dispatch(getScheduleThunk(id));\n        },\n        getSchedulesList: () => {\n            dispatch(getSchedulesThunk());\n        }\n    };\n};\n*/\nconst mapStateToProps = state => {\n    const scheduleId = state.schedule.scheduleId || '';\n    return {\n        scheduleId: scheduleId,\n        selectList: getSchedulesList(state)\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoadSchedule);\n","import DatePicker from \"react-datepicker\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"../Styles/tgnInput.css\";\n//import Col from \"reactstrap/lib/Col\";\nimport Button from \"reactstrap/lib/Button\";\nimport { connect } from \"react-redux\";\nimport { Aux } from \"./Aux\";\nimport {\n    setScheduleEndDate,\n    toggleScheduleModal\n} from \"../Redux/actions/actionCreators\";\nimport {\n    setScheduleStartDateThunk,\n    addScheduleThunk,\n    saveScheduleThunk\n} from \"../Redux/actions/async\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faCalendarAlt,\n    faPlusCircle,\n    faSave\n} from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst ConfigureSchedule = props => {\n    const {\n        start_date,\n        end_date,\n        updateScheduleEndDate,\n        updateScheduleStartDate,\n        addClick,\n        scheduleId,\n        saveClick,\n        isPublished\n    } = props;\n\n    const buttonConfig = scheduleId\n        ? {\n              icon: faSave,\n              buttonText: \"Save Schedule\",\n              clickFunction: saveClick\n          }\n        : {\n              icon: faPlusCircle,\n              buttonText: \"Create Schedule\",\n              clickFunction: addClick\n          };\n    const startDate = moment(start_date);\n    const endDate = moment(end_date);\n\n    return (\n        <Aux>\n            <div className=\"input-group input-group-sm mb-3\">\n                <div className=\"input-group-prepend\">\n                    <span className=\"input-group-text\">\n                        <FontAwesomeIcon icon={faCalendarAlt} />{\" \"}\n                    </span>\n                </div>\n                <DatePicker\n                    className=\"form-control form-control-sm tgn-input meetingDatePicker\"\n                    dateFormat=\"DD/MM/YYYY\"\n                    selected={startDate}\n                    selectsStart\n                    autocomplete=\"false\"\n                    startDate={startDate}\n                    endDate={endDate}\n                    onChange={m => {\n                        updateScheduleStartDate(m);\n                    }}\n                />\n                <div className=\"input-group-append\">\n                    <span\n                        className=\"input-group-text\"\n                        style={{ borderLeft: 0, borderRight: 0 }}\n                    >\n                        to\n                    </span>\n                </div>\n\n                <DatePicker\n                    className=\"form-control form-control-sm tgn-input meetingDatePicker\"\n                    dateFormat=\"DD/MM/YYYY\"\n                    selected={endDate}\n                    selectsEnd\n                    autocomplete=\"false\"\n                    startDate={startDate}\n                    endDate={endDate}\n                    onChange={m => {\n                        updateScheduleEndDate(m.format());\n                    }}\n                />\n                <div className=\"input-group-append\">\n                    <Button\n                        color=\"primary\"\n                        onClick={buttonConfig.clickFunction}\n                        size=\"sm\"\n                        disabled={isPublished}\n                    >\n                      <FontAwesomeIcon icon={buttonConfig.icon} /> {buttonConfig.buttonText}\n                    </Button>\n                </div>\n            </div>\n        </Aux>\n    );\n};\nconst mapDispatchToProps = {\n    updateScheduleStartDate: setScheduleStartDateThunk,\n    updateScheduleEndDate: setScheduleEndDate,\n    addClick: addScheduleThunk,\n    cancelClick: toggleScheduleModal,\n    saveClick: saveScheduleThunk\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return { ...state.schedule, isPublished: state.schedule.isPublished };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ConfigureSchedule);\n","import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst CreateModal = (props) => {\n    const { showModal, click, heading } = props\n\n    return (\n      <div>\n        <Modal isOpen={showModal} className={'testClass'}>\n          <ModalHeader toggle={() => click()}>{heading}</ModalHeader>\n          <ModalBody>\n                {props.children}\n          </ModalBody>\n          <ModalFooter>\n                {props.buttons}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n}\n\nexport default CreateModal\n","import React from \"react\";\nimport CreateModal from \"./CreateModal\";\nimport Button from \"reactstrap/lib/Button\";\nimport { Aux } from \"./Aux\";\n\nconst SaveScheduleModal = props => {\n    const buttons = (\n        <Aux>\n            <Button\n                color=\"primary\"\n                onClick={props.ok}\n            >\n                OK\n            </Button>\n            <Button\n                color=\"danger\"\n                onClick={props.cancel}\n            >\n                Cancel\n            </Button>\n        </Aux>\n    );\n    return (\n        <CreateModal\n            heading={props.heading}\n            click={props.cancel}\n            buttons={buttons}\n            showModal={props.show}\n        >\n            <p>Yeah boi!</p>\n        </CreateModal>\n    );\n};\n\nexport default SaveScheduleModal;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { FormGroup, Input, Label } from \"reactstrap\";\nimport { schedulePublishedCheck } from \"../Redux/actions/async\";\nimport { getApiRoot } from \"../Redux/reducers/rootReducer\";\n\nconst ScheduleIsPublishedCB = props => {\n    const checkBoxName = \"isSchedulePublishedCB\";\n    const { isPublished, scheduleId, schedulePublishedCheck } = props;\n\n    return scheduleId ? (\n        <FormGroup check inline>\n            <Input\n                checked={isPublished}\n                id={checkBoxName}\n                bsSize=\"sm\"\n                onChange={e => {\n                    schedulePublishedCheck(e.target.checked);\n                }}\n                style={{ cursor: \"pointer\" }}\n                type=\"checkbox\"\n            />\n            <Label\n                size=\"sm\"\n                check={true}\n                htmlFor={checkBoxName}\n                title=\"Protect from editing or mark as published\"\n                style={{ cursor: \"pointer\" }}\n            >\n                Schedule Published\n            </Label>\n        </FormGroup>\n    ) : null;\n};\n\nconst mapDispatchToProps = {\n    schedulePublishedCheck\n};\nconst mapStateToProps = state => {\n    return {\n        apiRoot: getApiRoot(state),\n        isPublished: state.schedule.isPublished,\n        scheduleId: state.schedule.scheduleId\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ScheduleIsPublishedCB);\n","import React from \"react\";\nimport Row from \"reactstrap/lib/Row\";\nimport Col from 'reactstrap/lib/Col';\nimport Button from \"reactstrap/lib/Button\";\nimport { connect } from \"react-redux\";\nimport FormGroup from \"reactstrap/lib/FormGroup\";\nimport LoadSchedule from \"./LoadSchedule\";\nimport ConfigureSchedule from \"./ConfigureSchedule\";\nimport SaveScheduleModal from \"./SaveScheduleModal\";\nimport { toggleScheduleSaveModal } from \"../Redux/actions/actionCreators\";\nimport { deleteScheduleThunk, saveScheduleThunk} from \"../Redux/actions/async\";\n\nimport { getIsScheduleSaveModalVisible } from \"../Redux/reducers/rootReducer\";\nimport ScheduleIsPublishedCB from \"./ScheduleIsPublishedCB\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./ScheduleRow.module.css\";\n\nconst ScheduleRow = props => {\n    const {\n        toggleScheduleSaveModal,\n        saveScheduleThunk,\n        deleteScheduleThunk,\n        isModalVisible,\n        isPublished\n    } = props;\n    return (\n        <Row>\n\n            <Col lg=\"3\">\n            <FormGroup className={styles.SpaceBetween}>\n                <LoadSchedule />\n            </FormGroup>\n\n            </Col>\n            <Col lg=\"2\">\n            <FormGroup className={styles.SpaceBetween}>\n                <Button\n                    disabled={isPublished}\n                    onClick={deleteScheduleThunk}\n                    size=\"sm\"\n                >\n                    <FontAwesomeIcon icon={faTrashAlt} /> Delete\n                </Button>\n            </FormGroup>\n            </Col>\n            <Col lg=\"7\">\n            <FormGroup className={styles.SpaceBetween}>\n                <ConfigureSchedule />\n            </FormGroup>\n\n            <FormGroup>\n                <ScheduleIsPublishedCB />\n            </FormGroup>\n            <SaveScheduleModal\n                heading=\"Save Schedule\"\n                show={isModalVisible}\n                ok={saveScheduleThunk}\n                cancel={toggleScheduleSaveModal}\n            />\n            </Col>\n        </Row>\n    );\n};\n\n/*const mapDispatchToProps = {\n    modalToggle: toggleScheduleSaveModal,\n    saveSchedule: saveScheduleThunk,\n    deleteSchedule: deleteScheduleThunk\n};*/\n\nconst mapDispatchToProps = {\n    toggleScheduleSaveModal,\n    saveScheduleThunk,\n    deleteScheduleThunk\n};\n\nconst mapStateToProps = state => {\n    return {\n        isModalVisible: getIsScheduleSaveModalVisible(state),\n        isPublished: state.schedule.isPublished\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ScheduleRow);\n","import React from \"react\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"../Styles/styles.css\";\n\nimport {\n    faExclamationCircle,\n    faCheckCircle,\n    faCheck,\n    faThumbsUp,\n    faQuestion,\n    faQuestionCircle,\n    faExclamationTriangle\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add([\n    faExclamationCircle,\n    faCheckCircle,\n    faCheck,\n    faThumbsUp,\n    faQuestion,\n    faQuestionCircle,\n    faExclamationTriangle\n]);\n\nconst icons = color => {\n    let icon = null;\n    switch (color) {\n        case \"primary\":\n        case \"secondary\":\n        case \"success\":\n            icon = \"thumbs-up\";\n            break;\n        case \"danger\":\n        case \"warning\":\n            icon = \"exclamation-triangle\";\n            break;\n        case \"info\":\n        case \"light\":\n        case \"dark\":\n        default:\n            icon = \"exclamation-circle\";\n    }\n    return icon;\n};\nconst AlertMessage = props => {\n    let icon = icons(props.color);\n    return (\n        <CSSTransition\n            in={props.show}\n            timeout={300}\n            classNames={{\n                enter: \"animated\",\n                enterActive: \"fadeIn\",\n                exit: \"animated\",\n                exitActive: \"slideOutUp\"\n\n              }}\n            unmountOnExit\n        >\n            <Alert\n                transition={{ baseClassActive: \"\", timeout: 0 }}\n                color={props.color}\n                fade={false}\n            >\n                <FontAwesomeIcon icon={icon} /> {props.message}\n            </Alert>\n        </CSSTransition>\n    );\n};\n\nexport default AlertMessage;\n","import { connect } from \"react-redux\";\nimport Heading from \"./Heading\";\nimport Meeting from \"./Meeting\";\nimport Aux from \"../Components/Aux\";\nimport Row from \"reactstrap/lib/Row\";\nimport moment from \"moment\";\nimport Part from \"./Part\";\nimport React, { Component } from \"react\";\nimport MeetingNote from \"./MeetingNote\";\nimport ScheduleRow from \"./ScheduleRow\";\nimport AddMeeting from \"./AddMeeting\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../Styles/styles.css\";\nimport \"../Styles/animate.css\";\nimport {\n    getMeetings,\n    getMeetingParts,\n    getIsFetching,\n    getMeetingCount\n} from \"../Redux/reducers/rootReducer\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport AlertMessage from \"./AlertMessage\";\nimport * as asyncActions from \"../Redux/actions/async\";\n\nclass clamEdit extends Component {\n    componentDidMount() {\n        const { getParts, getPrivs, getSchedule, search } = this.props;\n\n        const params = queryString.parse(search);\n        getParts();\n        getPrivs();\n\n        if (typeof params.id !== \"undefined\") {\n            getSchedule(params.id);\n        }\n    }\n\n    render() {\n        const {\n            meetingCount,\n            addPart,\n            schedule,\n            deleteMeeting,\n            deletePart,\n            updateAllStartTimes,\n            meetingsArrayObject,\n            updateMeetingPart,\n            updateTime,\n            getMeetingParts,\n            meetingPartsById,\n            alertMessage,\n            scheduleId\n        } = this.props;\n\n        const { start_date: startDate } = schedule;\n        const scheduleMonth = moment(startDate).format(\"MMMM\");\n        const scheduleYear = moment(startDate).year();\n\n        let addMeeting = null;\n        // console.log(scheduleId, meetingCount);\n        if (scheduleId && meetingCount === 0) {\n            addMeeting = (\n                <Row className=\"mb-3\">\n                    <AddMeeting />\n                </Row>\n            );\n        }\n\n        return (\n            <Aux>\n                <Heading\n                    scheduleMonth={scheduleMonth}\n                    scheduleYear={scheduleYear}\n                    scheduleId={scheduleId}\n                >\n                    <AlertMessage\n                        message={alertMessage.message}\n                        color={alertMessage.color}\n                        show={alertMessage.show}\n                    />\n                </Heading>\n\n                <ScheduleRow />\n                {addMeeting}\n                <TransitionGroup>\n                    {meetingsArrayObject &&\n                        meetingsArrayObject.map(meeting => {\n                            const meetingId = meeting.local_id;\n                            const meetingParts = getMeetingParts(meetingId);\n\n                            let partComponentList = null;\n\n                            if (meetingParts) {\n                                partComponentList = meetingParts.map(\n                                    (partFields, index) => {\n                                        const partId = partFields.id;\n\n                                        return (\n                                            <CSSTransition\n                                                key={\n                                                    \"PartAnimation\" +\n                                                    meetingId +\n                                                    \"part\" +\n                                                    partId\n                                                }\n                                                timeout={300}\n                                                classNames=\"meeting\"\n                                            >\n                                                <Part\n                                                    startTime={\n                                                        partFields.start_time\n                                                    }\n                                                    meetingStartTime={\n                                                        meeting.startTime\n                                                    }\n                                                    updateTime={updateTime}\n                                                    updateMeetingPart={\n                                                        updateMeetingPart\n                                                    }\n                                                    key={\n                                                        \"meeting\" +\n                                                        meetingId +\n                                                        \"partKey\" +\n                                                        partId\n                                                    }\n                                                    deletePart={deletePart}\n                                                    indexNumber={index}\n                                                    addPart={addPart}\n                                                    meeting={meeting.date}\n                                                    meetingPartsById={\n                                                        meetingPartsById\n                                                    }\n                                                    meetingId={meetingId}\n                                                    {...partFields}\n                                                />\n                                            </CSSTransition>\n                                        );\n                                    }\n                                );\n                            }\n\n                            return (\n                                <CSSTransition\n                                    key={\"meetingAnimation\" + meetingId}\n                                    timeout={500}\n                                    classNames=\"fade\"\n                                >\n                                    <Meeting\n                                        updateAllStartTimes={\n                                            updateAllStartTimes\n                                        }\n                                        deleteMeeting={deleteMeeting}\n                                        key={\"meeting\" + meetingId}\n                                        meetingDate={meeting.date}\n                                        meetingId={meetingId}\n                                    >\n                                        <TransitionGroup className=\"partList\">\n                                            {partComponentList}\n                                        </TransitionGroup>\n\n                                        <MeetingNote meetingId={meetingId} />\n                                    </Meeting>\n                                </CSSTransition>\n                            );\n                        })}\n                </TransitionGroup>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const {\n        alertMessage,\n        shouldUpdate,\n        meetingPartsById,\n        schedule,\n        router\n    } = state;\n    const { location } = router;\n    const { search, pathname, hash } = location;\n    const { scheduleId } = schedule;\n\n    return {\n        meetingCount: getMeetingCount(state),\n        alertMessage,\n        shouldUpdate,\n        meetingPartsById,\n        meetingsArrayObject: getMeetings(state),\n        getMeetingParts: meetingId => getMeetingParts(meetingId, state),\n        isFetching: getIsFetching(state),\n        schedule,\n        scheduleId,\n        pathname,\n        search,\n        hash\n    };\n};\n\nconst mapDispatchToProps = {\n    deleteMeeting: asyncActions.deleteMeetingThunk,\n    getPrivs: asyncActions.getPrivsThunk,\n    getParts: asyncActions.getPartsThunk,\n    updateAllStartTimes: asyncActions.updateAllStartTimesThunk,\n    updateTime: asyncActions.updateTimeThunk,\n    deletePart: asyncActions.deletePartUpdateTimesThunk,\n    getSchedule: asyncActions.getScheduleThunk\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(clamEdit));\n","import moment from 'moment'\n\n//const scheduleDate = moment().add(1, 'month')\n/*\nconst initialState = {\n    addParts: {\n        showPicker: false,\n        insertAfterPart: null,\n        insertInMeetingId: null\n    },\n    meetingsById: [\"1\", \"2\", \"3\", \"4\", \"5\"],\n    meetings: {\n        \"1\": { date: '3/7/2018', startTime: '7:30PM', meeting_id: '1', parts: [] },\n        \"2\": { date: '10/7/2018', startTime: '7:30PM', meeting_id: '2', parts: [] },\n        \"3\": { date: '17/7/2018', startTime: '7:30PM', meeting_id: '3', parts: [] },\n        \"4\": { date: '24/7/2018', startTime: '7:30PM', meeting_id: '4', parts: [] },\n        \"5\": { date: '31/7/2018', startTime: '7:30PM', meeting_id: '5', parts: [] }\n    },\n\n    message: ['Use Redux'], formData: {}\n}\n*/\nconst initialStateDev = {\n    addParts: {\n        showPicker: false,\n        insertAfterPart: null,\n        insertInMeetingId: null\n    },\n    meetingsById: [],\n    meetings: {},\n    schedule: {\n        start_date: moment().startOf('month').format(),\n        end_date: moment().endOf('month').format(),\n        scheduleId: ''\n    },\n    addMeeting: {\n        meetingDate: moment().startOf('month').format()\n    }\n}\n\nexport default initialStateDev\n","import {  createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport initialState from \"./initialState\";\nimport { batchDispatchMiddleware } from \"redux-batched-actions\";\nimport { createLogger } from \"redux-logger\";\nimport { createRouteReducer } from './reducers/rootReducer';\nimport { createBrowserHistory } from \"history\";\nimport { routerMiddleware } from \"connected-react-router\";\n\nexport const history = createBrowserHistory();\nlet logger = createLogger();\n\nlet middleware = [thunk, batchDispatchMiddleware];\n\nif (typeof window !== \"undefined\" && process.env.NODE_ENV !== \"production\") {\n    middleware = [...middleware, logger];\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    createRouteReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), ...middleware))\n);\n\nexport default store;\n","import \"react-app-polyfill/ie9\";\n\nimport { ConnectedRouter } from \"connected-react-router\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './Styles/disabled.css';\nimport Root from \"./Components/Root\";\nimport { Provider } from \"react-redux\";\nimport store, { history } from \"./Redux/store\";\nimport { setApiUrl } from \"./Redux/actions/actionCreators\";\nimport \"moment/locale/en-au\";\n\nconst root = document.getElementById(\"root\");\nlet API_URL = root.getAttribute(\"baseurl\");\n\nif (\n    window.location.hostname !== \"localhost\" &&\n    process.env.NODE_ENV !== \"production\"\n) {\n    console.log(\"API_URL\", \"http://10.19.73.30/api\");\n    API_URL = \"http://10.19.73.30/api\";\n}\n\nstore.dispatch(setApiUrl(API_URL));\n\nReactDOM.render(\n    <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Root />\n        </ConnectedRouter>\n    </Provider>,\n    root\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SpaceBetween\":\"ScheduleRow_SpaceBetween__12uYC\"};"],"sourceRoot":""}